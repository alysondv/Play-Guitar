

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jul 08 02:28:51 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataCOMRAM
    77  00156A                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for menu@F49
    81  00156A  01                 	db	1
    82  00156B  01                 	db	1
    83  00156C  03                 	db	3
    84  00156D  05                 	db	5
    85  00156E  04                 	db	4
    86  00156F  02                 	db	2
    87  001570  02                 	db	2
    88  001571  02                 	db	2
    89  001572  03                 	db	3
    90  001573  04                 	db	4
    91  001574  05                 	db	5
    92  001575  05                 	db	5
    93  001576  02                 	db	2
    94  001577  01                 	db	1
    95  001578  03                 	db	3
    96  001579  03                 	db	3
    97  00157A  04                 	db	4
    98  00157B  01                 	db	1
    99  00157C  01                 	db	1
   100  00157D  05                 	db	5
   101                           
   102                           ;initializer for pontua@F22
   103  00157E  003F               	dw	63
   104  001580  0006               	dw	6
   105  001582  005B               	dw	91
   106  001584  004F               	dw	79
   107  001586  0066               	dw	102
   108  001588  006D               	dw	109
   109  00158A  007D               	dw	125
   110  00158C  0007               	dw	7
   111  00158E  007F               	dw	127
   112  001590  006F               	dw	111
   113                           
   114                           ;initializer for _atraso
   115  001592  000F               	dw	15
   116                           
   117                           ;initializer for _atraso_min
   118  001594  0005               	dw	5
   119                           
   120                           ;initializer for _atrasoMax
   121  001596  03E8               	dw	1000
   122                           
   123                           ;initializer for _atrasoMed
   124  001598  0096               	dw	150
   125                           
   126                           ;initializer for _atrasoMin
   127  00159A  0014               	dw	20
   128                           
   129                           	psect	idataBANK0
   130  0015F0                     __pidataBANK0:
   131                           	callstack 0
   132                           
   133                           ;initializer for menu@F47
   134  0015F0  32                 	db	50
   135  0015F1  34                 	db	52
   136  0015F2  33                 	db	51
   137  0015F3  35                 	db	53
   138  0015F4  31                 	db	49
   139  0015F5  32                 	db	50
   140  0015F6  33                 	db	51
   141  0015F7  34                 	db	52
   142  0015F8  31                 	db	49
   143  0015F9  31                 	db	49
   144  0015FA  32                 	db	50
   145  0015FB  34                 	db	52
   146  0015FC  33                 	db	51
   147  0015FD  31                 	db	49
   148  0015FE  32                 	db	50
   149  0015FF  31                 	db	49
   150  001600  32                 	db	50
   151  001601  33                 	db	51
   152  001602  32                 	db	50
   153  001603  34                 	db	52
   154                           
   155                           ;initializer for menu@F45
   156  001604  02                 	db	2
   157  001605  04                 	db	4
   158  001606  03                 	db	3
   159  001607  05                 	db	5
   160  001608  01                 	db	1
   161  001609  02                 	db	2
   162  00160A  03                 	db	3
   163  00160B  04                 	db	4
   164  00160C  01                 	db	1
   165  00160D  01                 	db	1
   166  00160E  02                 	db	2
   167  00160F  04                 	db	4
   168  001610  03                 	db	3
   169  001611  01                 	db	1
   170  001612  02                 	db	2
   171  001613  01                 	db	1
   172  001614  02                 	db	2
   173  001615  03                 	db	3
   174  001616  02                 	db	2
   175  001617  04                 	db	4
   176                           
   177                           	psect	idataBANK1
   178  001618                     __pidataBANK1:
   179                           	callstack 0
   180                           
   181                           ;initializer for menu@F51
   182  001618  31                 	db	49
   183  001619  31                 	db	49
   184  00161A  33                 	db	51
   185  00161B  35                 	db	53
   186  00161C  34                 	db	52
   187  00161D  32                 	db	50
   188  00161E  32                 	db	50
   189  00161F  32                 	db	50
   190  001620  33                 	db	51
   191  001621  34                 	db	52
   192  001622  35                 	db	53
   193  001623  35                 	db	53
   194  001624  32                 	db	50
   195  001625  31                 	db	49
   196  001626  33                 	db	51
   197  001627  33                 	db	51
   198  001628  34                 	db	52
   199  001629  31                 	db	49
   200  00162A  31                 	db	49
   201  00162B  35                 	db	53
   202                           
   203                           	psect	smallconst
   204  000600                     __psmallconst:
   205                           	callstack 0
   206  000600  00                 	db	0
   207  000601                     _linha:
   208                           	callstack 0
   209  000601  01                 	db	1
   210  000602  02                 	db	2
   211  000603  04                 	db	4
   212  000604  00                 	db	0
   213  000605                     __end_of_linha:
   214                           	callstack 0
   215  000605                     STR_23:
   216  000605  2A                 	db	42
   217  000606  2A                 	db	42
   218  000607  2A                 	db	42
   219  000608  2A                 	db	42
   220  000609  2A                 	db	42
   221  00060A  2A                 	db	42
   222  00060B  2A                 	db	42
   223  00060C  2A                 	db	42
   224  00060D  2A                 	db	42
   225  00060E  2A                 	db	42
   226  00060F  2A                 	db	42
   227  000610  2A                 	db	42
   228  000611  2A                 	db	42
   229  000612  2A                 	db	42
   230  000613  2A                 	db	42
   231  000614  2A                 	db	42
   232  000615  00                 	db	0
   233  000616                     STR_3:
   234  000616  2D                 	db	45
   235  000617  2D                 	db	45
   236  000618  2D                 	db	45
   237  000619  2D                 	db	45
   238  00061A  2D                 	db	45
   239  00061B  2D                 	db	45
   240  00061C  2D                 	db	45
   241  00061D  2D                 	db	45
   242  00061E  2D                 	db	45
   243  00061F  2D                 	db	45
   244  000620  2D                 	db	45
   245  000621  2D                 	db	45
   246  000622  2D                 	db	45
   247  000623  2D                 	db	45
   248  000624  2D                 	db	45
   249  000625  2D                 	db	45
   250  000626  00                 	db	0
   251  000627                     STR_20:
   252  000627  45                 	db	69	;'E'
   253  000628  73                 	db	115	;'s'
   254  000629  63                 	db	99	;'c'
   255  00062A  6F                 	db	111	;'o'
   256  00062B  6C                 	db	108	;'l'
   257  00062C  68                 	db	104	;'h'
   258  00062D  61                 	db	97	;'a'
   259  00062E  20                 	db	32
   260  00062F  61                 	db	97	;'a'
   261  000630  20                 	db	32
   262  000631  6D                 	db	109	;'m'
   263  000632  75                 	db	117	;'u'
   264  000633  73                 	db	115	;'s'
   265  000634  69                 	db	105	;'i'
   266  000635  63                 	db	99	;'c'
   267  000636  61                 	db	97	;'a'
   268  000637  00                 	db	0
   269  000638                     STR_24:
   270  000638  4F                 	db	79	;'O'
   271  000639  70                 	db	112	;'p'
   272  00063A  20                 	db	32
   273  00063B  3C                 	db	60	;'<'
   274  00063C  31                 	db	49	;'1'
   275  00063D  3E                 	db	62	;'>'
   276  00063E  20                 	db	32
   277  00063F  6F                 	db	111	;'o'
   278  000640  75                 	db	117	;'u'
   279  000641  20                 	db	32
   280  000642  3C                 	db	60	;'<'
   281  000643  32                 	db	50	;'2'
   282  000644  3E                 	db	62	;'>'
   283  000645  20                 	db	32
   284  000646  00                 	db	0
   285  000647                     STR_9:
   286  000647  20                 	db	32
   287  000648  20                 	db	32
   288  000649  20                 	db	32
   289  00064A  56                 	db	86	;'V'
   290  00064B  41                 	db	65	;'A'
   291  00064C  6C                 	db	108	;'l'
   292  00064D  45                 	db	69	;'E'
   293  00064E  4E                 	db	78	;'N'
   294  00064F  44                 	db	68	;'D'
   295  000650  4F                 	db	79	;'O'
   296  000651  21                 	db	33
   297  000652  21                 	db	33
   298  000653  21                 	db	33
   299  000654  00                 	db	0
   300  000655                     STR_10:
   301  000655  2D                 	db	45
   302  000656  20                 	db	32
   303  000657  20                 	db	32
   304  000658  50                 	db	80	;'P'
   305  000659  45                 	db	69	;'E'
   306  00065A  52                 	db	82	;'R'
   307  00065B  46                 	db	70	;'F'
   308  00065C  45                 	db	69	;'E'
   309  00065D  43                 	db	67	;'C'
   310  00065E  54                 	db	84	;'T'
   311  00065F  20                 	db	32
   312  000660  20                 	db	32
   313  000661  2D                 	db	45
   314  000662  00                 	db	0
   315  000663                     STR_21:
   316  000663  28                 	db	40
   317  000664  31                 	db	49	;'1'
   318  000665  29                 	db	41
   319  000666  20                 	db	32
   320  000667  2D                 	db	45
   321  000668  20                 	db	32
   322  000669  4A                 	db	74	;'J'
   323  00066A  55                 	db	85	;'U'
   324  00066B  4C                 	db	76	;'L'
   325  00066C  49                 	db	73	;'I'
   326  00066D  45                 	db	69	;'E'
   327  00066E  54                 	db	84	;'T'
   328  00066F  41                 	db	65	;'A'
   329  000670  00                 	db	0
   330  000671                     STR_19:
   331  000671  20                 	db	32
   332  000672  20                 	db	32
   333  000673  50                 	db	80	;'P'
   334  000674  4C                 	db	76	;'L'
   335  000675  41                 	db	65	;'A'
   336  000676  59                 	db	89	;'Y'
   337  000677  20                 	db	32
   338  000678  47                 	db	71	;'G'
   339  000679  55                 	db	85	;'U'
   340  00067A  49                 	db	73	;'I'
   341  00067B  54                 	db	84	;'T'
   342  00067C  41                 	db	65	;'A'
   343  00067D  52                 	db	82	;'R'
   344  00067E  00                 	db	0
   345  00067F                     STR_22:
   346  00067F  28                 	db	40
   347  000680  32                 	db	50	;'2'
   348  000681  29                 	db	41
   349  000682  20                 	db	32
   350  000683  2D                 	db	45
   351  000684  20                 	db	32
   352  000685  4D                 	db	77	;'M'
   353  000686  4F                 	db	79	;'O'
   354  000687  5A                 	db	90	;'Z'
   355  000688  41                 	db	65	;'A'
   356  000689  52                 	db	82	;'R'
   357  00068A  54                 	db	84	;'T'
   358  00068B  00                 	db	0
   359  00068C                     STR_1:
   360  00068C  20                 	db	32
   361  00068D  20                 	db	32
   362  00068E  20                 	db	32
   363  00068F  20                 	db	32
   364  000690  4A                 	db	74	;'J'
   365  000691  55                 	db	85	;'U'
   366  000692  4C                 	db	76	;'L'
   367  000693  49                 	db	73	;'I'
   368  000694  45                 	db	69	;'E'
   369  000695  54                 	db	84	;'T'
   370  000696  41                 	db	65	;'A'
   371  000697  00                 	db	0
   372  000698                     STR_2:
   373  000698  20                 	db	32
   374  000699  20                 	db	32
   375  00069A  20                 	db	32
   376  00069B  20                 	db	32
   377  00069C  20                 	db	32
   378  00069D  4D                 	db	77	;'M'
   379  00069E  4F                 	db	79	;'O'
   380  00069F  5A                 	db	90	;'Z'
   381  0006A0  41                 	db	65	;'A'
   382  0006A1  52                 	db	82	;'R'
   383  0006A2  54                 	db	84	;'T'
   384  0006A3  00                 	db	0
   385  0006A4                     STR_17:
   386  0006A4  20                 	db	32
   387  0006A5  20                 	db	32
   388  0006A6  20                 	db	32
   389  0006A7  57                 	db	87	;'W'
   390  0006A8  45                 	db	69	;'E'
   391  0006A9  4C                 	db	76	;'L'
   392  0006AA  43                 	db	67	;'C'
   393  0006AB  4F                 	db	79	;'O'
   394  0006AC  4D                 	db	77	;'M'
   395  0006AD  45                 	db	69	;'E'
   396  0006AE  00                 	db	0
   397  0006AF                     STR_5:
   398  0006AF  54                 	db	84	;'T'
   399  0006B0  4F                 	db	79	;'O'
   400  0006B1  43                 	db	67	;'C'
   401  0006B2  41                 	db	65	;'A'
   402  0006B3  4E                 	db	78	;'N'
   403  0006B4  44                 	db	68	;'D'
   404  0006B5  4F                 	db	79	;'O'
   405  0006B6  3A                 	db	58	;':'
   406  0006B7  20                 	db	32
   407  0006B8  00                 	db	0
   408  0006B9                     STR_12:
   409  0006B9  50                 	db	80	;'P'
   410  0006BA  4F                 	db	79	;'O'
   411  0006BB  4E                 	db	78	;'N'
   412  0006BC  54                 	db	84	;'T'
   413  0006BD  20                 	db	32
   414  0006BE  4D                 	db	77	;'M'
   415  0006BF  41                 	db	65	;'A'
   416  0006C0  58                 	db	88	;'X'
   417  0006C1  3A                 	db	58	;':'
   418  0006C2  00                 	db	0
   419  0006C3                     STR_11:
   420  0006C3  56                 	db	86	;'V'
   421  0006C4  4F                 	db	79	;'O'
   422  0006C5  43                 	db	67	;'C'
   423  0006C6  45                 	db	69	;'E'
   424  0006C7  20                 	db	32
   425  0006C8  46                 	db	70	;'F'
   426  0006C9  45                 	db	69	;'E'
   427  0006CA  5A                 	db	90	;'Z'
   428  0006CB  3A                 	db	58	;':'
   429  0006CC  00                 	db	0
   430  0006CD                     STR_4:
   431  0006CD  20                 	db	32
   432  0006CE  20                 	db	32
   433  0006CF  20                 	db	32
   434  0006D0  42                 	db	66	;'B'
   435  0006D1  55                 	db	85	;'U'
   436  0006D2  5A                 	db	90	;'Z'
   437  0006D3  5A                 	db	90	;'Z'
   438  0006D4  45                 	db	69	;'E'
   439  0006D5  52                 	db	82	;'R'
   440  0006D6  00                 	db	0
   441  0006D7                     STR_8:
   442  0006D7  20                 	db	32
   443  0006D8  20                 	db	32
   444  0006D9  50                 	db	80	;'P'
   445  0006DA  52                 	db	82	;'R'
   446  0006DB  4F                 	db	79	;'O'
   447  0006DC  4E                 	db	78	;'N'
   448  0006DD  54                 	db	84	;'T'
   449  0006DE  4F                 	db	79	;'O'
   450  0006DF  00                 	db	0
   451  0006E0                     STR_13:
   452  0006E0  35                 	db	53	;'5'
   453  0006E1  30                 	db	48	;'0'
   454  0006E2  30                 	db	48	;'0'
   455  0006E3  00                 	db	0
   456  0006E4  00                 	db	0	; dummy byte at the end
   457  0000                     
   458                           ; #config settings
   459                           
   460                           	psect	cinit
   461  001312                     __pcinit:
   462                           	callstack 0
   463  001312                     start_initialization:
   464                           	callstack 0
   465  001312                     __initialization:
   466                           	callstack 0
   467                           
   468                           ; Initialize objects allocated to BANK1 (20 bytes)
   469                           ; load TBLPTR registers with __pidataBANK1
   470  001312  0E18               	movlw	low __pidataBANK1
   471  001314  6EF6               	movwf	tblptrl,c
   472  001316  0E16               	movlw	high __pidataBANK1
   473  001318  6EF7               	movwf	tblptrh,c
   474  00131A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   475  00131C  6EF8               	movwf	tblptru,c
   476  00131E  EE01  F000         	lfsr	0,__pdataBANK1
   477  001322  EE10 F014          	lfsr	1,20
   478  001326                     copy_data0:
   479  001326  0009               	tblrd		*+
   480  001328  CFF5 FFEE          	movff	tablat,postinc0
   481  00132C  50E5               	movf	postdec1,w,c
   482  00132E  50E1               	movf	fsr1l,w,c
   483  001330  E1FA               	bnz	copy_data0
   484                           
   485                           ; Initialize objects allocated to BANK0 (40 bytes)
   486                           ; load TBLPTR registers with __pidataBANK0
   487  001332  0EF0               	movlw	low __pidataBANK0
   488  001334  6EF6               	movwf	tblptrl,c
   489  001336  0E15               	movlw	high __pidataBANK0
   490  001338  6EF7               	movwf	tblptrh,c
   491  00133A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   492  00133C  6EF8               	movwf	tblptru,c
   493  00133E  EE00  F0D1         	lfsr	0,__pdataBANK0
   494  001342  EE10 F028          	lfsr	1,40
   495  001346                     copy_data1:
   496  001346  0009               	tblrd		*+
   497  001348  CFF5 FFEE          	movff	tablat,postinc0
   498  00134C  50E5               	movf	postdec1,w,c
   499  00134E  50E1               	movf	fsr1l,w,c
   500  001350  E1FA               	bnz	copy_data1
   501                           
   502                           ; Initialize objects allocated to COMRAM (50 bytes)
   503                           ; load TBLPTR registers with __pidataCOMRAM
   504  001352  0E6A               	movlw	low __pidataCOMRAM
   505  001354  6EF6               	movwf	tblptrl,c
   506  001356  0E15               	movlw	high __pidataCOMRAM
   507  001358  6EF7               	movwf	tblptrh,c
   508  00135A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   509  00135C  6EF8               	movwf	tblptru,c
   510  00135E  EE00  F03B         	lfsr	0,__pdataCOMRAM
   511  001362  EE10 F032          	lfsr	1,50
   512  001366                     copy_data2:
   513  001366  0009               	tblrd		*+
   514  001368  CFF5 FFEE          	movff	tablat,postinc0
   515  00136C  50E5               	movf	postdec1,w,c
   516  00136E  50E1               	movf	fsr1l,w,c
   517  001370  E1FA               	bnz	copy_data2
   518                           
   519                           ; Clear objects allocated to COMRAM (4 bytes)
   520  001372  6A70               	clrf	(__pbssCOMRAM+3)& (0+255),c
   521  001374  6A6F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   522  001376  6A6E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   523  001378  6A6D               	clrf	__pbssCOMRAM& (0+255),c
   524  00137A                     end_of_initialization:
   525                           	callstack 0
   526  00137A                     __end_of__initialization:
   527                           	callstack 0
   528  00137A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   529  00137C  6EF8               	movwf	tblptru,c
   530  00137E  0100               	movlb	0
   531  001380  EF16  F00B         	goto	_main	;jump to C main() function
   532                           
   533                           	psect	bssCOMRAM
   534  00006D                     __pbssCOMRAM:
   535                           	callstack 0
   536  00006D                     _cont:
   537                           	callstack 0
   538  00006D                     	ds	4
   539                           
   540                           	psect	dataCOMRAM
   541  00003B                     __pdataCOMRAM:
   542                           	callstack 0
   543  00003B                     menu@F49:
   544                           	callstack 0
   545  00003B                     	ds	20
   546  00004F                     pontua@F22:
   547                           	callstack 0
   548  00004F                     	ds	20
   549  000063                     _atraso:
   550                           	callstack 0
   551  000063                     	ds	2
   552  000065                     _atraso_min:
   553                           	callstack 0
   554  000065                     	ds	2
   555  000067                     _atrasoMax:
   556                           	callstack 0
   557  000067                     	ds	2
   558  000069                     _atrasoMed:
   559                           	callstack 0
   560  000069                     	ds	2
   561  00006B                     _atrasoMin:
   562                           	callstack 0
   563  00006B                     	ds	2
   564                           
   565                           	psect	dataBANK0
   566  0000D1                     __pdataBANK0:
   567                           	callstack 0
   568  0000D1                     menu@F47:
   569                           	callstack 0
   570  0000D1                     	ds	20
   571  0000E5                     menu@F45:
   572                           	callstack 0
   573  0000E5                     	ds	20
   574                           
   575                           	psect	dataBANK1
   576  000100                     __pdataBANK1:
   577                           	callstack 0
   578  000100                     menu@F51:
   579                           	callstack 0
   580  000100                     	ds	20
   581                           
   582                           	psect	cstackBANK0
   583  000080                     __pcstackBANK0:
   584                           	callstack 0
   585  000080                     menu@mozartC:
   586                           	callstack 0
   587                           
   588                           ; 20 bytes @ 0x0
   589  000080                     	ds	20
   590  000094                     menu@julietaC:
   591                           	callstack 0
   592                           
   593                           ; 20 bytes @ 0x14
   594  000094                     	ds	20
   595  0000A8                     menu@mozart:
   596                           	callstack 0
   597                           
   598                           ; 20 bytes @ 0x28
   599  0000A8                     	ds	20
   600  0000BC                     menu@julieta:
   601                           	callstack 0
   602                           
   603                           ; 20 bytes @ 0x3C
   604  0000BC                     	ds	20
   605  0000D0                     menu@tmp:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x50
   609  0000D0                     	ds	1
   610                           
   611                           	psect	cstackCOMRAM
   612  000001                     __pcstackCOMRAM:
   613                           	callstack 0
   614  000001                     ?___lwmod:
   615                           	callstack 0
   616  000001                     ?___lldiv:
   617                           	callstack 0
   618  000001                     lcd_wr@val:
   619                           	callstack 0
   620  000001                     atraso_ms@t:
   621                           	callstack 0
   622  000001                     ___lwmod@dividend:
   623                           	callstack 0
   624  000001                     ___lldiv@dividend:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x0
   628  000001                     	ds	2
   629  000003                     atraso_ms@i:
   630                           	callstack 0
   631  000003                     ___lwmod@divisor:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x2
   635  000003                     	ds	2
   636  000005                     atraso_ms@j:
   637                           	callstack 0
   638  000005                     ___lwmod@counter:
   639                           	callstack 0
   640  000005                     ___lldiv@divisor:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x4
   644  000005                     	ds	1
   645  000006                     ?___lwdiv:
   646                           	callstack 0
   647  000006                     atraso_ms@k:
   648                           	callstack 0
   649  000006                     ___lwdiv@dividend:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x5
   653  000006                     	ds	1
   654  000007                     lcd_cmd@val:
   655                           	callstack 0
   656  000007                     lcd_dat@val:
   657                           	callstack 0
   658  000007                     tc_tecla@timeout:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x6
   662  000007                     	ds	1
   663  000008                     lcd_str@str:
   664                           	callstack 0
   665  000008                     ___lwdiv@divisor:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x7
   669  000008                     	ds	1
   670  000009                     tc_tecla@to:
   671                           	callstack 0
   672  000009                     ___lldiv@quotient:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x8
   676  000009                     	ds	1
   677  00000A                     ??_lcd_str:
   678  00000A                     ___lwdiv@quotient:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x9
   682  00000A                     	ds	1
   683  00000B                     tc_tecla@tmp:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0xA
   687  00000B                     	ds	1
   688  00000C                     lcd_str@i:
   689                           	callstack 0
   690  00000C                     tc_tecla@ret:
   691                           	callstack 0
   692  00000C                     ___lwdiv@counter:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0xB
   696  00000C                     	ds	1
   697  00000D                     tc_tecla@i:
   698                           	callstack 0
   699  00000D                     ___lldiv@counter:
   700                           	callstack 0
   701  00000D                     msgDisplay@op:
   702                           	callstack 0
   703  00000D                     buzzer@op:
   704                           	callstack 0
   705  00000D                     itoa@val:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0xC
   709  00000D                     	ds	1
   710  00000E                     ?___llmod:
   711                           	callstack 0
   712  00000E                     ___llmod@dividend:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0xD
   716  00000E                     	ds	1
   717  00000F                     msgDisplay@i:
   718                           	callstack 0
   719  00000F                     itoa@str:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0xE
   723  00000F                     	ds	2
   724  000011                     pontFinal@valor:
   725                           	callstack 0
   726                           
   727                           ; 6 bytes @ 0x10
   728  000011                     	ds	1
   729  000012                     ___llmod@divisor:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x11
   733  000012                     	ds	4
   734  000016                     ___llmod@counter:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x15
   738  000016                     	ds	1
   739  000017                     pontua@decimal:
   740                           	callstack 0
   741                           
   742                           ; 20 bytes @ 0x16
   743  000017                     	ds	20
   744  00002B                     pontua@i:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x2A
   748  00002B                     	ds	2
   749  00002D                     pontua@delay:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x2C
   753  00002D                     	ds	2
   754  00002F                     pontua@k:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x2E
   758  00002F                     	ds	2
   759  000031                     musica@msc:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x30
   763  000031                     	ds	2
   764  000033                     musica@mscC:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x32
   768  000033                     	ds	2
   769  000035                     musica@op:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x34
   773  000035                     	ds	2
   774  000037                     ??_musica:
   775                           
   776                           ; 1 bytes @ 0x36
   777  000037                     	ds	2
   778  000039                     musica@tmp:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x38
   782  000039                     	ds	1
   783  00003A                     musica@i:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x39
   787  00003A                     	ds	1
   788  00003B                     
   789                           ; 1 bytes @ 0x3A
   790 ;;
   791 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   792 ;;
   793 ;; *************** function _main *****************
   794 ;; Defined at:
   795 ;;		line 282 in file "main.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  2  100[None  ] int 
   802 ;; Registers used:
   803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   809 ;;      Params:         0       0       0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0
   812 ;;      Totals:         0       0       0       0       0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels required when called:    6
   815 ;; This function calls:
   816 ;;		_menu
   817 ;; This function is called by:
   818 ;;		Startup code after reset
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text0
   823  00162C                     __ptext0:
   824                           	callstack 0
   825  00162C                     _main:
   826                           	callstack 25
   827  00162C                     
   828                           ;main.c: 283:     menu();
   829  00162C  EC97  F005         	call	_menu	;wreg free
   830  001630  EF00  F000         	goto	start
   831  001634                     __end_of_main:
   832                           	callstack 0
   833                           
   834 ;; *************** function _menu *****************
   835 ;; Defined at:
   836 ;;		line 221 in file "main.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  julieta        20   60[BANK0 ] unsigned char [20]
   841 ;;  mozart         20   40[BANK0 ] unsigned char [20]
   842 ;;  julietaC       20   20[BANK0 ] unsigned char [20]
   843 ;;  mozartC        20    0[BANK0 ] unsigned char [20]
   844 ;;  tmp             1   80[BANK0 ] unsigned char 
   845 ;;  i               1    0        unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   855 ;;      Params:         0       0       0       0       0       0       0
   856 ;;      Locals:         0      81       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0
   858 ;;      Totals:         0      81       0       0       0       0       0
   859 ;;Total ram usage:       81 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    5
   862 ;; This function calls:
   863 ;;		_atraso_ms
   864 ;;		_lcd_cmd
   865 ;;		_lcd_dat
   866 ;;		_lcd_init
   867 ;;		_lcd_str
   868 ;;		_musica
   869 ;;		_pontFinal
   870 ;;		_tc_tecla
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text1
   877  000B2E                     __ptext1:
   878                           	callstack 0
   879  000B2E                     _menu:
   880                           	callstack 25
   881  000B2E                     
   882                           ;main.c: 223:     unsigned char i;;main.c: 224:     unsigned char tmp;;main.c: 225:     
      +                          (*(volatile __near unsigned char*)0xFC1) = 0x06;
   883  000B2E  0E06               	movlw	6
   884  000B30  6EC1               	movwf	193,c	;volatile
   885                           
   886                           ;main.c: 226:     (*(volatile __near unsigned char*)0xF93) = 0x00;
   887  000B32  0E00               	movlw	0
   888  000B34  6E93               	movwf	147,c	;volatile
   889                           
   890                           ;main.c: 227:     (*(volatile __near unsigned char*)0xF95) = 0x00;
   891  000B36  0E00               	movlw	0
   892  000B38  6E95               	movwf	149,c	;volatile
   893                           
   894                           ;main.c: 228:     (*(volatile __near unsigned char*)0xF96) = 0x00;
   895  000B3A  0E00               	movlw	0
   896  000B3C  6E96               	movwf	150,c	;volatile
   897  000B3E                     
   898                           ;main.c: 230:     unsigned char mozart[] = {2, 4, 3, 5, 1, 2, 3, 4, 1, 1, 2, 4, 3, 1, 2,
      +                           1, 2 , 3, 2, 4 };
   899  000B3E  EE20  F0E5         	lfsr	2,menu@F45
   900  000B42  EE10  F0A8         	lfsr	1,menu@mozart
   901  000B46  0E13               	movlw	19
   902  000B48                     u1141:
   903  000B48  CFDB FFE3          	movff	plusw2,plusw1
   904  000B4C  06E8               	decf	wreg,f,c
   905  000B4E  E2FC               	bc	u1141
   906  000B50                     
   907                           ;main.c: 231:     unsigned char mozartC[] = {'2', '4', '3', '5', '1', '2', '3', '4', '1'
      +                          , '1', '2', '4', '3', '1', '2', '1', '2' , '3', '2', '4'};
   908  000B50  EE20  F0D1         	lfsr	2,menu@F47
   909  000B54  EE10  F080         	lfsr	1,menu@mozartC
   910  000B58  0E13               	movlw	19
   911  000B5A                     u1151:
   912  000B5A  CFDB FFE3          	movff	plusw2,plusw1
   913  000B5E  06E8               	decf	wreg,f,c
   914  000B60  E2FC               	bc	u1151
   915  000B62                     
   916                           ;main.c: 233:     unsigned char julieta[] = {1, 1, 3, 5, 4, 2, 2, 2, 3, 4, 5, 5, 2, 1, 3
      +                          , 3, 4 , 1, 1, 5};
   917  000B62  EE20  F03B         	lfsr	2,menu@F49
   918  000B66  EE10  F0BC         	lfsr	1,menu@julieta
   919  000B6A  0E13               	movlw	19
   920  000B6C                     u1161:
   921  000B6C  CFDB FFE3          	movff	plusw2,plusw1
   922  000B70  06E8               	decf	wreg,f,c
   923  000B72  E2FC               	bc	u1161
   924  000B74                     
   925                           ;main.c: 234:     unsigned char julietaC[] = {'1', '1', '3', '5', '4', '2', '2', '2', '3
      +                          ', '4', '5', '5', '2', '1', '3', '3', '4' , '1', '1', '5'};
   926  000B74  EE21  F000         	lfsr	2,menu@F51
   927  000B78  EE10  F094         	lfsr	1,menu@julietaC
   928  000B7C  0E13               	movlw	19
   929  000B7E                     u1171:
   930  000B7E  CFDB FFE3          	movff	plusw2,plusw1
   931  000B82  06E8               	decf	wreg,f,c
   932  000B84  E2FC               	bc	u1171
   933  000B86                     
   934                           ;main.c: 236:     lcd_init();
   935  000B86  EC5F  F00A         	call	_lcd_init	;wreg free
   936  000B8A                     
   937                           ;main.c: 238:     lcd_cmd(0x01);
   938  000B8A  0E01               	movlw	1
   939  000B8C  ECE3  F00A         	call	_lcd_cmd
   940  000B90                     
   941                           ;main.c: 239:     lcd_cmd(0x80);
   942  000B90  0E80               	movlw	128
   943  000B92  ECE3  F00A         	call	_lcd_cmd
   944  000B96                     
   945                           ;main.c: 240:     lcd_str("   WELCOME");
   946  000B96  0EA4               	movlw	low STR_17
   947  000B98  6E08               	movwf	lcd_str@str^0,c
   948  000B9A  0E06               	movlw	high STR_17
   949  000B9C  6E09               	movwf	(lcd_str@str+1)^0,c
   950  000B9E  EC13  F009         	call	_lcd_str	;wreg free
   951  000BA2                     
   952                           ;main.c: 241:     lcd_cmd(0xC0);
   953  000BA2  0EC0               	movlw	192
   954  000BA4  ECE3  F00A         	call	_lcd_cmd
   955  000BA8                     
   956                           ;main.c: 242:     lcd_str("----------------");
   957  000BA8  0E16               	movlw	low STR_3
   958  000BAA  6E08               	movwf	lcd_str@str^0,c
   959  000BAC  0E06               	movlw	high STR_3
   960  000BAE  6E09               	movwf	(lcd_str@str+1)^0,c
   961  000BB0  EC13  F009         	call	_lcd_str	;wreg free
   962  000BB4                     
   963                           ;main.c: 243:     lcd_cmd(0x90);
   964  000BB4  0E90               	movlw	144
   965  000BB6  ECE3  F00A         	call	_lcd_cmd
   966  000BBA                     
   967                           ;main.c: 244:     lcd_str("  PLAY GUITAR");
   968  000BBA  0E71               	movlw	low STR_19
   969  000BBC  6E08               	movwf	lcd_str@str^0,c
   970  000BBE  0E06               	movlw	high STR_19
   971  000BC0  6E09               	movwf	(lcd_str@str+1)^0,c
   972  000BC2  EC13  F009         	call	_lcd_str	;wreg free
   973  000BC6                     l1930:
   974                           
   975                           ;main.c: 245:     atraso_ms(atrasoMax);
   976  000BC6  0E03               	movlw	3
   977  000BC8  6E02               	movwf	(atraso_ms@t+1)^0,c
   978  000BCA  0EE8               	movlw	232
   979  000BCC  6E01               	movwf	atraso_ms@t^0,c
   980  000BCE  EC2D  F00A         	call	_atraso_ms	;wreg free
   981  000BD2                     
   982                           ;main.c: 248:         lcd_cmd(0x01);
   983  000BD2  0E01               	movlw	1
   984  000BD4  ECE3  F00A         	call	_lcd_cmd
   985  000BD8                     
   986                           ;main.c: 249:         lcd_cmd(0x80);
   987  000BD8  0E80               	movlw	128
   988  000BDA  ECE3  F00A         	call	_lcd_cmd
   989  000BDE                     
   990                           ;main.c: 250:         lcd_str("Escolha a musica");
   991  000BDE  0E27               	movlw	low STR_20
   992  000BE0  6E08               	movwf	lcd_str@str^0,c
   993  000BE2  0E06               	movlw	high STR_20
   994  000BE4  6E09               	movwf	(lcd_str@str+1)^0,c
   995  000BE6  EC13  F009         	call	_lcd_str	;wreg free
   996  000BEA                     
   997                           ;main.c: 251:         lcd_cmd(0xC0);
   998  000BEA  0EC0               	movlw	192
   999  000BEC  ECE3  F00A         	call	_lcd_cmd
  1000  000BF0                     
  1001                           ;main.c: 252:         lcd_str("(1) - JULIETA");
  1002  000BF0  0E63               	movlw	low STR_21
  1003  000BF2  6E08               	movwf	lcd_str@str^0,c
  1004  000BF4  0E06               	movlw	high STR_21
  1005  000BF6  6E09               	movwf	(lcd_str@str+1)^0,c
  1006  000BF8  EC13  F009         	call	_lcd_str	;wreg free
  1007  000BFC                     
  1008                           ;main.c: 253:         lcd_cmd(0x90);
  1009  000BFC  0E90               	movlw	144
  1010  000BFE  ECE3  F00A         	call	_lcd_cmd
  1011  000C02                     
  1012                           ;main.c: 254:         lcd_str("(2) - MOZART");
  1013  000C02  0E7F               	movlw	low STR_22
  1014  000C04  6E08               	movwf	lcd_str@str^0,c
  1015  000C06  0E06               	movlw	high STR_22
  1016  000C08  6E09               	movwf	(lcd_str@str+1)^0,c
  1017  000C0A  EC13  F009         	call	_lcd_str	;wreg free
  1018  000C0E                     
  1019                           ;main.c: 255:         lcd_cmd(0xD0);
  1020  000C0E  0ED0               	movlw	208
  1021  000C10  ECE3  F00A         	call	_lcd_cmd
  1022  000C14                     
  1023                           ;main.c: 256:         lcd_str("****************");
  1024  000C14  0E05               	movlw	low STR_23
  1025  000C16  6E08               	movwf	lcd_str@str^0,c
  1026  000C18  0E06               	movlw	high STR_23
  1027  000C1A  6E09               	movwf	(lcd_str@str+1)^0,c
  1028  000C1C  EC13  F009         	call	_lcd_str	;wreg free
  1029  000C20                     
  1030                           ;main.c: 257:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1031  000C20  0E0F               	movlw	15
  1032  000C22  6E95               	movwf	149,c	;volatile
  1033  000C24                     
  1034                           ;main.c: 258:         tmp = tc_tecla(0) + 0x30;
  1035  000C24  0E00               	movlw	0
  1036  000C26  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1037  000C28  0E00               	movlw	0
  1038  000C2A  6E07               	movwf	tc_tecla@timeout^0,c
  1039  000C2C  ECB2  F004         	call	_tc_tecla	;wreg free
  1040  000C30  0F30               	addlw	48
  1041  000C32  0100               	movlb	0	; () banked
  1042  000C34  6FD0               	movwf	menu@tmp& (0+255),b
  1043  000C36                     
  1044                           ; BSR set to: 0
  1045                           ;main.c: 260:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  1046  000C36  0E00               	movlw	0
  1047  000C38  6E95               	movwf	149,c	;volatile
  1048  000C3A                     
  1049                           ; BSR set to: 0
  1050                           ;main.c: 262:         if(tmp == '1' || tmp == '2'){
  1051  000C3A  0E31               	movlw	49
  1052  000C3C  19D0               	xorwf	menu@tmp& (0+255),w,b
  1053  000C3E  B4D8               	btfsc	status,2,c
  1054  000C40  EF24  F006         	goto	u1181
  1055  000C44  EF26  F006         	goto	u1180
  1056  000C48                     u1181:
  1057  000C48  EF2F  F006         	goto	l1960
  1058  000C4C                     u1180:
  1059  000C4C                     
  1060                           ; BSR set to: 0
  1061  000C4C  0E32               	movlw	50
  1062  000C4E  19D0               	xorwf	menu@tmp& (0+255),w,b
  1063  000C50  A4D8               	btfss	status,2,c
  1064  000C52  EF2D  F006         	goto	u1191
  1065  000C56  EF2F  F006         	goto	u1190
  1066  000C5A                     u1191:
  1067  000C5A  EF5A  F006         	goto	l1970
  1068  000C5E                     u1190:
  1069  000C5E                     l1960:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;main.c: 263:             if(tmp == '1'){
  1073  000C5E  0E31               	movlw	49
  1074  000C60  19D0               	xorwf	menu@tmp& (0+255),w,b
  1075  000C62  A4D8               	btfss	status,2,c
  1076  000C64  EF36  F006         	goto	u1201
  1077  000C68  EF38  F006         	goto	u1200
  1078  000C6C                     u1201:
  1079  000C6C  EF4A  F006         	goto	l1966
  1080  000C70                     u1200:
  1081  000C70                     
  1082                           ; BSR set to: 0
  1083                           ;main.c: 264:                 musica(julieta, julietaC, 1);
  1084  000C70  0EBC               	movlw	low menu@julieta
  1085  000C72  6E31               	movwf	musica@msc^0,c
  1086  000C74  0E00               	movlw	high menu@julieta
  1087  000C76  6E32               	movwf	(musica@msc+1)^0,c
  1088  000C78  0E94               	movlw	low menu@julietaC
  1089  000C7A  6E33               	movwf	musica@mscC^0,c
  1090  000C7C  0E00               	movlw	high menu@julietaC
  1091  000C7E  6E34               	movwf	(musica@mscC+1)^0,c
  1092  000C80  0E00               	movlw	0
  1093  000C82  6E36               	movwf	(musica@op+1)^0,c
  1094  000C84  0E01               	movlw	1
  1095  000C86  6E35               	movwf	musica@op^0,c
  1096  000C88  EC70  F006         	call	_musica	;wreg free
  1097  000C8C                     l1964:
  1098                           
  1099                           ;main.c: 265:                 pontFinal();
  1100  000C8C  EC13  F008         	call	_pontFinal	;wreg free
  1101                           
  1102                           ;main.c: 266:             }else{
  1103  000C90  EFE3  F005         	goto	l1930
  1104  000C94                     l1966:
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;main.c: 267:                 musica(mozart, mozartC, 2);
  1108  000C94  0EA8               	movlw	low menu@mozart
  1109  000C96  6E31               	movwf	musica@msc^0,c
  1110  000C98  0E00               	movlw	high menu@mozart
  1111  000C9A  6E32               	movwf	(musica@msc+1)^0,c
  1112  000C9C  0E80               	movlw	low menu@mozartC
  1113  000C9E  6E33               	movwf	musica@mscC^0,c
  1114  000CA0  0E00               	movlw	high menu@mozartC
  1115  000CA2  6E34               	movwf	(musica@mscC+1)^0,c
  1116  000CA4  0E00               	movlw	0
  1117  000CA6  6E36               	movwf	(musica@op+1)^0,c
  1118  000CA8  0E02               	movlw	2
  1119  000CAA  6E35               	movwf	musica@op^0,c
  1120  000CAC  EC70  F006         	call	_musica	;wreg free
  1121  000CB0  EF46  F006         	goto	l1964
  1122  000CB4                     l1970:
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;main.c: 271:             lcd_cmd(0x01);
  1126  000CB4  0E01               	movlw	1
  1127  000CB6  ECE3  F00A         	call	_lcd_cmd
  1128                           
  1129                           ;main.c: 272:             lcd_cmd(0xD0);
  1130  000CBA  0ED0               	movlw	208
  1131  000CBC  ECE3  F00A         	call	_lcd_cmd
  1132                           
  1133                           ;main.c: 273:             lcd_dat(tmp);
  1134  000CC0  0100               	movlb	0	; () banked
  1135  000CC2  51D0               	movf	menu@tmp& (0+255),w,b
  1136  000CC4  ECCE  F00A         	call	_lcd_dat
  1137                           
  1138                           ;main.c: 274:             lcd_cmd(0x90);
  1139  000CC8  0E90               	movlw	144
  1140  000CCA  ECE3  F00A         	call	_lcd_cmd
  1141  000CCE                     
  1142                           ;main.c: 275:             lcd_str("Op <1> ou <2> ");
  1143  000CCE  0E38               	movlw	low STR_24
  1144  000CD0  6E08               	movwf	lcd_str@str^0,c
  1145  000CD2  0E06               	movlw	high STR_24
  1146  000CD4  6E09               	movwf	(lcd_str@str+1)^0,c
  1147  000CD6  EC13  F009         	call	_lcd_str	;wreg free
  1148  000CDA  EFE3  F005         	goto	l1930
  1149  000CDE  0012               	return		;funcret
  1150  000CE0                     __end_of_menu:
  1151                           	callstack 0
  1152                           
  1153 ;; *************** function _pontFinal *****************
  1154 ;; Defined at:
  1155 ;;		line 147 in file "main.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  valor           6   16[COMRAM] unsigned char [6]
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1169 ;;      Params:         0       0       0       0       0       0       0
  1170 ;;      Locals:         6       0       0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0
  1172 ;;      Totals:         6       0       0       0       0       0       0
  1173 ;;Total ram usage:        6 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    3
  1176 ;; This function calls:
  1177 ;;		___lldiv
  1178 ;;		_atraso_ms
  1179 ;;		_itoa
  1180 ;;		_lcd_cmd
  1181 ;;		_lcd_str
  1182 ;; This function is called by:
  1183 ;;		_menu
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text2
  1188  001026                     __ptext2:
  1189                           	callstack 0
  1190  001026                     _pontFinal:
  1191                           	callstack 26
  1192  001026                     
  1193                           ;main.c: 148:     cont /= 10;
  1194  001026  C06D  F001         	movff	_cont,___lldiv@dividend
  1195  00102A  C06E  F002         	movff	_cont+1,___lldiv@dividend+1
  1196  00102E  C06F  F003         	movff	_cont+2,___lldiv@dividend+2
  1197  001032  C070  F004         	movff	_cont+3,___lldiv@dividend+3
  1198  001036  0E0A               	movlw	10
  1199  001038  6E05               	movwf	___lldiv@divisor^0,c
  1200  00103A  0E00               	movlw	0
  1201  00103C  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1202  00103E  0E00               	movlw	0
  1203  001040  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1204  001042  0E00               	movlw	0
  1205  001044  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1206  001046  EC7D  F008         	call	___lldiv	;wreg free
  1207  00104A  C001  F06D         	movff	?___lldiv,_cont
  1208  00104E  C002  F06E         	movff	?___lldiv+1,_cont+1
  1209  001052  C003  F06F         	movff	?___lldiv+2,_cont+2
  1210  001056  C004  F070         	movff	?___lldiv+3,_cont+3
  1211  00105A                     
  1212                           ;main.c: 149:     char valor[6];;main.c: 150:     itoa(cont, &valor);
  1213  00105A  C06D  F00D         	movff	_cont,itoa@val
  1214  00105E  C06E  F00E         	movff	_cont+1,itoa@val+1
  1215  001062  0E11               	movlw	low pontFinal@valor
  1216  001064  6E0F               	movwf	itoa@str^0,c
  1217  001066  0E00               	movlw	high pontFinal@valor
  1218  001068  6E10               	movwf	(itoa@str+1)^0,c
  1219  00106A  EC1E  F007         	call	_itoa	;wreg free
  1220  00106E                     
  1221                           ;main.c: 151:     lcd_cmd(0x01);
  1222  00106E  0E01               	movlw	1
  1223  001070  ECE3  F00A         	call	_lcd_cmd
  1224  001074                     
  1225                           ;main.c: 152:     if(cont == 500){
  1226  001074  0EF4               	movlw	244
  1227  001076  186D               	xorwf	_cont^0,w,c
  1228  001078  E108               	bnz	u1081
  1229  00107A  046E               	decf	(_cont+1)^0,w,c
  1230  00107C  106F               	iorwf	(_cont+2)^0,w,c
  1231  00107E  1070               	iorwf	(_cont+3)^0,w,c
  1232  001080  A4D8               	btfss	status,2,c
  1233  001082  EF45  F008         	goto	u1081
  1234  001086  EF47  F008         	goto	u1080
  1235  00108A                     u1081:
  1236  00108A  EF52  F008         	goto	l1826
  1237  00108E                     u1080:
  1238  00108E                     
  1239                           ;main.c: 153:         lcd_cmd(0x90);
  1240  00108E  0E90               	movlw	144
  1241  001090  ECE3  F00A         	call	_lcd_cmd
  1242  001094                     
  1243                           ;main.c: 154:         lcd_str("-  PERFECT  -");
  1244  001094  0E55               	movlw	low STR_10
  1245  001096  6E08               	movwf	lcd_str@str^0,c
  1246  001098  0E06               	movlw	high STR_10
  1247  00109A  6E09               	movwf	(lcd_str@str+1)^0,c
  1248  00109C  EC13  F009         	call	_lcd_str	;wreg free
  1249                           
  1250                           ;main.c: 155:     }else{
  1251  0010A0  EF76  F008         	goto	l1838
  1252  0010A4                     l1826:
  1253                           
  1254                           ;main.c: 157:         lcd_cmd(0x80);
  1255  0010A4  0E80               	movlw	128
  1256  0010A6  ECE3  F00A         	call	_lcd_cmd
  1257  0010AA                     
  1258                           ;main.c: 158:         lcd_str("VOCE FEZ:");
  1259  0010AA  0EC3               	movlw	low STR_11
  1260  0010AC  6E08               	movwf	lcd_str@str^0,c
  1261  0010AE  0E06               	movlw	high STR_11
  1262  0010B0  6E09               	movwf	(lcd_str@str+1)^0,c
  1263  0010B2  EC13  F009         	call	_lcd_str	;wreg free
  1264  0010B6                     
  1265                           ;main.c: 159:         lcd_cmd(0xC0);
  1266  0010B6  0EC0               	movlw	192
  1267  0010B8  ECE3  F00A         	call	_lcd_cmd
  1268                           
  1269                           ;main.c: 160:         lcd_str(valor);
  1270  0010BC  0E11               	movlw	low pontFinal@valor
  1271  0010BE  6E08               	movwf	lcd_str@str^0,c
  1272  0010C0  0E00               	movlw	high pontFinal@valor
  1273  0010C2  6E09               	movwf	(lcd_str@str+1)^0,c
  1274  0010C4  EC13  F009         	call	_lcd_str	;wreg free
  1275  0010C8                     
  1276                           ;main.c: 161:         lcd_cmd(0x90);
  1277  0010C8  0E90               	movlw	144
  1278  0010CA  ECE3  F00A         	call	_lcd_cmd
  1279  0010CE                     
  1280                           ;main.c: 162:         lcd_str("PONT MAX:");
  1281  0010CE  0EB9               	movlw	low STR_12
  1282  0010D0  6E08               	movwf	lcd_str@str^0,c
  1283  0010D2  0E06               	movlw	high STR_12
  1284  0010D4  6E09               	movwf	(lcd_str@str+1)^0,c
  1285  0010D6  EC13  F009         	call	_lcd_str	;wreg free
  1286                           
  1287                           ;main.c: 163:         lcd_cmd(0xD0);
  1288  0010DA  0ED0               	movlw	208
  1289  0010DC  ECE3  F00A         	call	_lcd_cmd
  1290  0010E0                     
  1291                           ;main.c: 164:         lcd_str("500");
  1292  0010E0  0EE0               	movlw	low STR_13
  1293  0010E2  6E08               	movwf	lcd_str@str^0,c
  1294  0010E4  0E06               	movlw	high STR_13
  1295  0010E6  6E09               	movwf	(lcd_str@str+1)^0,c
  1296  0010E8  EC13  F009         	call	_lcd_str	;wreg free
  1297  0010EC                     l1838:
  1298                           
  1299                           ;main.c: 166:     atraso_ms(3000);
  1300  0010EC  0E0B               	movlw	11
  1301  0010EE  6E02               	movwf	(atraso_ms@t+1)^0,c
  1302  0010F0  0EB8               	movlw	184
  1303  0010F2  6E01               	movwf	atraso_ms@t^0,c
  1304  0010F4  EC2D  F00A         	call	_atraso_ms	;wreg free
  1305  0010F8  0012               	return		;funcret
  1306  0010FA                     __end_of_pontFinal:
  1307                           	callstack 0
  1308                           
  1309 ;; *************** function _itoa *****************
  1310 ;; Defined at:
  1311 ;;		line 26 in file "itoa.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  val             2   12[COMRAM] unsigned int 
  1314 ;;  str             2   14[COMRAM] PTR unsigned char 
  1315 ;;		 -> pontFinal@valor(6), 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1327 ;;      Params:         4       0       0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0
  1330 ;;      Totals:         4       0       0       0       0       0       0
  1331 ;;Total ram usage:        4 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    1
  1334 ;; This function calls:
  1335 ;;		___lwdiv
  1336 ;;		___lwmod
  1337 ;; This function is called by:
  1338 ;;		_pontFinal
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text3
  1343  000E3C                     __ptext3:
  1344                           	callstack 0
  1345  000E3C                     _itoa:
  1346                           	callstack 27
  1347  000E3C                     
  1348                           ;itoa.c: 26: void itoa(unsigned int val, char* str );itoa.c: 27: {;itoa.c: 28:   str[0]=
      +                          (val/10000)+0x30;
  1349  000E3C  C00D  F006         	movff	itoa@val,___lwdiv@dividend
  1350  000E40  C00E  F007         	movff	itoa@val+1,___lwdiv@dividend+1
  1351  000E44  0E27               	movlw	39
  1352  000E46  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  1353  000E48  0E10               	movlw	16
  1354  000E4A  6E08               	movwf	___lwdiv@divisor^0,c
  1355  000E4C  EC4F  F009         	call	___lwdiv	;wreg free
  1356  000E50  5006               	movf	?___lwdiv^0,w,c
  1357  000E52  0F30               	addlw	48
  1358  000E54  C00F  FFD9         	movff	itoa@str,fsr2l
  1359  000E58  C010  FFDA         	movff	itoa@str+1,fsr2h
  1360  000E5C  6EDF               	movwf	indf2,c
  1361                           
  1362                           ;itoa.c: 29:   str[1]=((val%10000)/1000)+0x30;
  1363  000E5E  EE20 F001          	lfsr	2,1
  1364  000E62  500F               	movf	itoa@str^0,w,c
  1365  000E64  26D9               	addwf	fsr2l,f,c
  1366  000E66  5010               	movf	(itoa@str+1)^0,w,c
  1367  000E68  22DA               	addwfc	fsr2h,f,c
  1368  000E6A  0E27               	movlw	39
  1369  000E6C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1370  000E6E  0E10               	movlw	16
  1371  000E70  6E03               	movwf	___lwmod@divisor^0,c
  1372  000E72  C00D  F001         	movff	itoa@val,___lwmod@dividend
  1373  000E76  C00E  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1374  000E7A  ECFB  F009         	call	___lwmod	;wreg free
  1375  000E7E  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  1376  000E82  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  1377  000E86  0E03               	movlw	3
  1378  000E88  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  1379  000E8A  0EE8               	movlw	232
  1380  000E8C  6E08               	movwf	___lwdiv@divisor^0,c
  1381  000E8E  EC4F  F009         	call	___lwdiv	;wreg free
  1382  000E92  5006               	movf	?___lwdiv^0,w,c
  1383  000E94  0F30               	addlw	48
  1384  000E96  6EDF               	movwf	indf2,c
  1385                           
  1386                           ;itoa.c: 30:   str[2]=((val%1000)/100)+0x30;
  1387  000E98  EE20 F002          	lfsr	2,2
  1388  000E9C  500F               	movf	itoa@str^0,w,c
  1389  000E9E  26D9               	addwf	fsr2l,f,c
  1390  000EA0  5010               	movf	(itoa@str+1)^0,w,c
  1391  000EA2  22DA               	addwfc	fsr2h,f,c
  1392  000EA4  0E03               	movlw	3
  1393  000EA6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1394  000EA8  0EE8               	movlw	232
  1395  000EAA  6E03               	movwf	___lwmod@divisor^0,c
  1396  000EAC  C00D  F001         	movff	itoa@val,___lwmod@dividend
  1397  000EB0  C00E  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1398  000EB4  ECFB  F009         	call	___lwmod	;wreg free
  1399  000EB8  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  1400  000EBC  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  1401  000EC0  0E00               	movlw	0
  1402  000EC2  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  1403  000EC4  0E64               	movlw	100
  1404  000EC6  6E08               	movwf	___lwdiv@divisor^0,c
  1405  000EC8  EC4F  F009         	call	___lwdiv	;wreg free
  1406  000ECC  5006               	movf	?___lwdiv^0,w,c
  1407  000ECE  0F30               	addlw	48
  1408  000ED0  6EDF               	movwf	indf2,c
  1409                           
  1410                           ;itoa.c: 31:   str[3]=((val%100)/10)+0x30;
  1411  000ED2  EE20 F003          	lfsr	2,3
  1412  000ED6  500F               	movf	itoa@str^0,w,c
  1413  000ED8  26D9               	addwf	fsr2l,f,c
  1414  000EDA  5010               	movf	(itoa@str+1)^0,w,c
  1415  000EDC  22DA               	addwfc	fsr2h,f,c
  1416  000EDE  0E00               	movlw	0
  1417  000EE0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1418  000EE2  0E64               	movlw	100
  1419  000EE4  6E03               	movwf	___lwmod@divisor^0,c
  1420  000EE6  C00D  F001         	movff	itoa@val,___lwmod@dividend
  1421  000EEA  C00E  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1422  000EEE  ECFB  F009         	call	___lwmod	;wreg free
  1423  000EF2  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  1424  000EF6  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  1425  000EFA  0E00               	movlw	0
  1426  000EFC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  1427  000EFE  0E0A               	movlw	10
  1428  000F00  6E08               	movwf	___lwdiv@divisor^0,c
  1429  000F02  EC4F  F009         	call	___lwdiv	;wreg free
  1430  000F06  5006               	movf	?___lwdiv^0,w,c
  1431  000F08  0F30               	addlw	48
  1432  000F0A  6EDF               	movwf	indf2,c
  1433                           
  1434                           ;itoa.c: 32:   str[4]=(val%10)+0x30;
  1435  000F0C  EE20 F004          	lfsr	2,4
  1436  000F10  500F               	movf	itoa@str^0,w,c
  1437  000F12  26D9               	addwf	fsr2l,f,c
  1438  000F14  5010               	movf	(itoa@str+1)^0,w,c
  1439  000F16  22DA               	addwfc	fsr2h,f,c
  1440  000F18  C00D  F001         	movff	itoa@val,___lwmod@dividend
  1441  000F1C  C00E  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1442  000F20  0E00               	movlw	0
  1443  000F22  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1444  000F24  0E0A               	movlw	10
  1445  000F26  6E03               	movwf	___lwmod@divisor^0,c
  1446  000F28  ECFB  F009         	call	___lwmod	;wreg free
  1447  000F2C  5001               	movf	?___lwmod^0,w,c
  1448  000F2E  0F30               	addlw	48
  1449  000F30  6EDF               	movwf	indf2,c
  1450  000F32                     
  1451                           ;itoa.c: 33:   str[5]=0;
  1452  000F32  EE20 F005          	lfsr	2,5
  1453  000F36  500F               	movf	itoa@str^0,w,c
  1454  000F38  26D9               	addwf	fsr2l,f,c
  1455  000F3A  5010               	movf	(itoa@str+1)^0,w,c
  1456  000F3C  22DA               	addwfc	fsr2h,f,c
  1457  000F3E  0E00               	movlw	0
  1458  000F40  6EDF               	movwf	indf2,c
  1459  000F42  0012               	return		;funcret
  1460  000F44                     __end_of_itoa:
  1461                           	callstack 0
  1462                           
  1463 ;; *************** function ___lwmod *****************
  1464 ;; Defined at:
  1465 ;;		line 7 in file "C:\Program Files (x86)\pic\sources\c99\common\lwmod.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  dividend        2    0[COMRAM] unsigned int 
  1468 ;;  divisor         2    2[COMRAM] unsigned int 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  counter         1    4[COMRAM] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  2    0[COMRAM] unsigned int 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1480 ;;      Params:         4       0       0       0       0       0       0
  1481 ;;      Locals:         1       0       0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0
  1483 ;;      Totals:         5       0       0       0       0       0       0
  1484 ;;Total ram usage:        5 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_itoa
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text4
  1494  0013F6                     __ptext4:
  1495                           	callstack 0
  1496  0013F6                     ___lwmod:
  1497                           	callstack 27
  1498  0013F6  5003               	movf	___lwmod@divisor^0,w,c
  1499  0013F8  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1500  0013FA  B4D8               	btfsc	status,2,c
  1501  0013FC  EF02  F00A         	goto	u761
  1502  001400  EF04  F00A         	goto	u760
  1503  001404                     u761:
  1504  001404  EF28  F00A         	goto	l680
  1505  001408                     u760:
  1506  001408  0E01               	movlw	1
  1507  00140A  6E05               	movwf	___lwmod@counter^0,c
  1508  00140C  EF0C  F00A         	goto	l1560
  1509  001410                     l1558:
  1510  001410  90D8               	bcf	status,0,c
  1511  001412  3603               	rlcf	___lwmod@divisor^0,f,c
  1512  001414  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1513  001416  2A05               	incf	___lwmod@counter^0,f,c
  1514  001418                     l1560:
  1515  001418  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1516  00141A  EF11  F00A         	goto	u771
  1517  00141E  EF13  F00A         	goto	u770
  1518  001422                     u771:
  1519  001422  EF08  F00A         	goto	l1558
  1520  001426                     u770:
  1521  001426                     l1562:
  1522  001426  5003               	movf	___lwmod@divisor^0,w,c
  1523  001428  5C01               	subwf	___lwmod@dividend^0,w,c
  1524  00142A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1525  00142C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1526  00142E  A0D8               	btfss	status,0,c
  1527  001430  EF1C  F00A         	goto	u781
  1528  001434  EF1E  F00A         	goto	u780
  1529  001438                     u781:
  1530  001438  EF22  F00A         	goto	l1566
  1531  00143C                     u780:
  1532  00143C  5003               	movf	___lwmod@divisor^0,w,c
  1533  00143E  5E01               	subwf	___lwmod@dividend^0,f,c
  1534  001440  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1535  001442  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1536  001444                     l1566:
  1537  001444  90D8               	bcf	status,0,c
  1538  001446  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1539  001448  3203               	rrcf	___lwmod@divisor^0,f,c
  1540  00144A  2E05               	decfsz	___lwmod@counter^0,f,c
  1541  00144C  EF13  F00A         	goto	l1562
  1542  001450                     l680:
  1543  001450  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1544  001454  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1545  001458  0012               	return		;funcret
  1546  00145A                     __end_of___lwmod:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function ___lwdiv *****************
  1550 ;; Defined at:
  1551 ;;		line 7 in file "C:\Program Files (x86)\pic\sources\c99\common\lwdiv.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  dividend        2    5[COMRAM] unsigned int 
  1554 ;;  divisor         2    7[COMRAM] unsigned int 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  quotient        2    9[COMRAM] unsigned int 
  1557 ;;  counter         1   11[COMRAM] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  2    5[COMRAM] unsigned int 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1567 ;;      Params:         4       0       0       0       0       0       0
  1568 ;;      Locals:         3       0       0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0
  1570 ;;      Totals:         7       0       0       0       0       0       0
  1571 ;;Total ram usage:        7 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		_itoa
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text5
  1581  00129E                     __ptext5:
  1582                           	callstack 0
  1583  00129E                     ___lwdiv:
  1584                           	callstack 27
  1585  00129E  0E00               	movlw	0
  1586  0012A0  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  1587  0012A2  0E00               	movlw	0
  1588  0012A4  6E0A               	movwf	___lwdiv@quotient^0,c
  1589  0012A6  5008               	movf	___lwdiv@divisor^0,w,c
  1590  0012A8  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1591  0012AA  B4D8               	btfsc	status,2,c
  1592  0012AC  EF5A  F009         	goto	u731
  1593  0012B0  EF5C  F009         	goto	u730
  1594  0012B4                     u731:
  1595  0012B4  EF84  F009         	goto	l670
  1596  0012B8                     u730:
  1597  0012B8  0E01               	movlw	1
  1598  0012BA  6E0C               	movwf	___lwdiv@counter^0,c
  1599  0012BC  EF64  F009         	goto	l1540
  1600  0012C0                     l1538:
  1601  0012C0  90D8               	bcf	status,0,c
  1602  0012C2  3608               	rlcf	___lwdiv@divisor^0,f,c
  1603  0012C4  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1604  0012C6  2A0C               	incf	___lwdiv@counter^0,f,c
  1605  0012C8                     l1540:
  1606  0012C8  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1607  0012CA  EF69  F009         	goto	u741
  1608  0012CE  EF6B  F009         	goto	u740
  1609  0012D2                     u741:
  1610  0012D2  EF60  F009         	goto	l1538
  1611  0012D6                     u740:
  1612  0012D6                     l1542:
  1613  0012D6  90D8               	bcf	status,0,c
  1614  0012D8  360A               	rlcf	___lwdiv@quotient^0,f,c
  1615  0012DA  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1616  0012DC  5008               	movf	___lwdiv@divisor^0,w,c
  1617  0012DE  5C06               	subwf	___lwdiv@dividend^0,w,c
  1618  0012E0  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1619  0012E2  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1620  0012E4  A0D8               	btfss	status,0,c
  1621  0012E6  EF77  F009         	goto	u751
  1622  0012EA  EF79  F009         	goto	u750
  1623  0012EE                     u751:
  1624  0012EE  EF7E  F009         	goto	l1550
  1625  0012F2                     u750:
  1626  0012F2  5008               	movf	___lwdiv@divisor^0,w,c
  1627  0012F4  5E06               	subwf	___lwdiv@dividend^0,f,c
  1628  0012F6  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1629  0012F8  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1630  0012FA  800A               	bsf	___lwdiv@quotient^0,0,c
  1631  0012FC                     l1550:
  1632  0012FC  90D8               	bcf	status,0,c
  1633  0012FE  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1634  001300  3208               	rrcf	___lwdiv@divisor^0,f,c
  1635  001302  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1636  001304  EF6B  F009         	goto	l1542
  1637  001308                     l670:
  1638  001308  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1639  00130C  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1640  001310  0012               	return		;funcret
  1641  001312                     __end_of___lwdiv:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function _musica *****************
  1645 ;; Defined at:
  1646 ;;		line 170 in file "main.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  msc             2   48[COMRAM] PTR unsigned char 
  1649 ;;		 -> menu@julieta(20), menu@mozart(20), 
  1650 ;;  mscC            2   50[COMRAM] PTR unsigned char 
  1651 ;;		 -> menu@julietaC(20), menu@mozartC(20), 
  1652 ;;  op              2   52[COMRAM] int 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  i               1   57[COMRAM] unsigned char 
  1655 ;;  tmp             1   56[COMRAM] unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1665 ;;      Params:         6       0       0       0       0       0       0
  1666 ;;      Locals:         2       0       0       0       0       0       0
  1667 ;;      Temps:          2       0       0       0       0       0       0
  1668 ;;      Totals:        10       0       0       0       0       0       0
  1669 ;;Total ram usage:       10 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    4
  1672 ;; This function calls:
  1673 ;;		_atraso_ms
  1674 ;;		_buzzer
  1675 ;;		_lcd_cmd
  1676 ;;		_lcd_str
  1677 ;;		_msgDisplay
  1678 ;;		_msgInicio
  1679 ;;		_pontua
  1680 ;;		_tc_tecla
  1681 ;; This function is called by:
  1682 ;;		_menu
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text6
  1687  000CE0                     __ptext6:
  1688                           	callstack 0
  1689  000CE0                     _musica:
  1690                           	callstack 25
  1691  000CE0                     
  1692                           ;main.c: 171:     unsigned char i;;main.c: 172:     unsigned char tmp;;main.c: 174:     
      +                          (*(volatile __near unsigned char*)0xF81) = 0x00;
  1693  000CE0  0E00               	movlw	0
  1694  000CE2  6E81               	movwf	129,c	;volatile
  1695                           
  1696                           ;main.c: 175:     (*(volatile __near unsigned char*)0xF83) = 0x00;
  1697  000CE4  0E00               	movlw	0
  1698  000CE6  6E83               	movwf	131,c	;volatile
  1699                           
  1700                           ;main.c: 177:     cont = 0;
  1701  000CE8  0E00               	movlw	0
  1702  000CEA  6E6D               	movwf	_cont^0,c
  1703  000CEC  0E00               	movlw	0
  1704  000CEE  6E6E               	movwf	(_cont+1)^0,c
  1705  000CF0  0E00               	movlw	0
  1706  000CF2  6E6F               	movwf	(_cont+2)^0,c
  1707  000CF4  0E00               	movlw	0
  1708  000CF6  6E70               	movwf	(_cont+3)^0,c
  1709  000CF8                     
  1710                           ;main.c: 179:     msgDisplay(op);
  1711  000CF8  C035  F00D         	movff	musica@op,msgDisplay@op
  1712  000CFC  C036  F00E         	movff	musica@op+1,msgDisplay@op+1
  1713  000D00  ECA2  F007         	call	_msgDisplay	;wreg free
  1714  000D04                     
  1715                           ;main.c: 181:     msgInicio();
  1716  000D04  EC8D  F00A         	call	_msgInicio	;wreg free
  1717  000D08                     
  1718                           ;main.c: 183:     lcd_cmd(0x01);
  1719  000D08  0E01               	movlw	1
  1720  000D0A  ECE3  F00A         	call	_lcd_cmd
  1721  000D0E                     
  1722                           ;main.c: 184:     lcd_cmd(0xC0);
  1723  000D0E  0EC0               	movlw	192
  1724  000D10  ECE3  F00A         	call	_lcd_cmd
  1725  000D14                     
  1726                           ;main.c: 185:     lcd_str("TOCANDO: ");
  1727  000D14  0EAF               	movlw	low STR_5
  1728  000D16  6E08               	movwf	lcd_str@str^0,c
  1729  000D18  0E06               	movlw	high STR_5
  1730  000D1A  6E09               	movwf	(lcd_str@str+1)^0,c
  1731  000D1C  EC13  F009         	call	_lcd_str	;wreg free
  1732  000D20                     
  1733                           ;main.c: 186:     lcd_cmd(0x90);
  1734  000D20  0E90               	movlw	144
  1735  000D22  ECE3  F00A         	call	_lcd_cmd
  1736  000D26                     
  1737                           ;main.c: 187:     if(op == 1){
  1738  000D26  0435               	decf	musica@op^0,w,c
  1739  000D28  1036               	iorwf	(musica@op+1)^0,w,c
  1740  000D2A  A4D8               	btfss	status,2,c
  1741  000D2C  EF9A  F006         	goto	u1091
  1742  000D30  EF9C  F006         	goto	u1090
  1743  000D34                     u1091:
  1744  000D34  EFA4  F006         	goto	l1858
  1745  000D38                     u1090:
  1746  000D38                     
  1747                           ;main.c: 188:         lcd_str("  JULIETA");
  1748  000D38  0E8E               	movlw	low (STR_1+2)
  1749  000D3A  6E08               	movwf	lcd_str@str^0,c
  1750  000D3C  0E06               	movlw	high (STR_1+2)
  1751  000D3E  6E09               	movwf	(lcd_str@str+1)^0,c
  1752  000D40  EC13  F009         	call	_lcd_str	;wreg free
  1753                           
  1754                           ;main.c: 190:     }else{
  1755  000D44  EFAA  F006         	goto	l1860
  1756  000D48                     l1858:
  1757                           
  1758                           ;main.c: 191:         lcd_str("  MOZART");
  1759  000D48  0E9B               	movlw	low (STR_2+3)
  1760  000D4A  6E08               	movwf	lcd_str@str^0,c
  1761  000D4C  0E06               	movlw	high (STR_2+3)
  1762  000D4E  6E09               	movwf	(lcd_str@str+1)^0,c
  1763  000D50  EC13  F009         	call	_lcd_str	;wreg free
  1764  000D54                     l1860:
  1765                           
  1766                           ;main.c: 194:     (*(volatile __near unsigned char*)0xF81) = 0x00;
  1767  000D54  0E00               	movlw	0
  1768  000D56  6E81               	movwf	129,c	;volatile
  1769  000D58                     
  1770                           ;main.c: 195:     for(i = 0; i < 20; i++){
  1771  000D58  0E00               	movlw	0
  1772  000D5A  6E3A               	movwf	musica@i^0,c
  1773  000D5C                     l1868:
  1774                           
  1775                           ;main.c: 196:         (*(volatile __near unsigned char*)0xF81) = 0x00;
  1776  000D5C  0E00               	movlw	0
  1777  000D5E  6E81               	movwf	129,c	;volatile
  1778  000D60                     
  1779                           ;main.c: 197:         (((*(volatile __near unsigned char*)0xF81)) |= (1<<msc[i]));
  1780  000D60  503A               	movf	musica@i^0,w,c
  1781  000D62  2431               	addwf	musica@msc^0,w,c
  1782  000D64  6ED9               	movwf	fsr2l,c
  1783  000D66  0E00               	movlw	0
  1784  000D68  2032               	addwfc	(musica@msc+1)^0,w,c
  1785  000D6A  6EDA               	movwf	fsr2h,c
  1786  000D6C  50DF               	movf	indf2,w,c
  1787  000D6E  6E37               	movwf	??_musica^0,c
  1788  000D70  0E01               	movlw	1
  1789  000D72  6E38               	movwf	(??_musica+1)^0,c
  1790  000D74  2A37               	incf	??_musica^0,f,c
  1791  000D76  EFBF  F006         	goto	u1104
  1792  000D7A                     u1105:
  1793  000D7A  90D8               	bcf	status,0,c
  1794  000D7C  3638               	rlcf	(??_musica+1)^0,f,c
  1795  000D7E                     u1104:
  1796  000D7E  2E37               	decfsz	??_musica^0,f,c
  1797  000D80  EFBD  F006         	goto	u1105
  1798  000D84  5038               	movf	(??_musica+1)^0,w,c
  1799  000D86  1281               	iorwf	129,f,c	;volatile
  1800  000D88                     
  1801                           ;main.c: 198:         atraso_ms(atrasoMax);
  1802  000D88  0E03               	movlw	3
  1803  000D8A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1804  000D8C  0EE8               	movlw	232
  1805  000D8E  6E01               	movwf	atraso_ms@t^0,c
  1806  000D90  EC2D  F00A         	call	_atraso_ms	;wreg free
  1807  000D94                     
  1808                           ;main.c: 199:         (((*(volatile __near unsigned char*)0xF81)) &= ~(1<<msc[i]));
  1809  000D94  503A               	movf	musica@i^0,w,c
  1810  000D96  2431               	addwf	musica@msc^0,w,c
  1811  000D98  6ED9               	movwf	fsr2l,c
  1812  000D9A  0E00               	movlw	0
  1813  000D9C  2032               	addwfc	(musica@msc+1)^0,w,c
  1814  000D9E  6EDA               	movwf	fsr2h,c
  1815  000DA0  50DF               	movf	indf2,w,c
  1816  000DA2  6E37               	movwf	??_musica^0,c
  1817  000DA4  0E01               	movlw	1
  1818  000DA6  6E38               	movwf	(??_musica+1)^0,c
  1819  000DA8  2A37               	incf	??_musica^0,f,c
  1820  000DAA  EFD9  F006         	goto	u1114
  1821  000DAE                     u1115:
  1822  000DAE  90D8               	bcf	status,0,c
  1823  000DB0  3638               	rlcf	(??_musica+1)^0,f,c
  1824  000DB2                     u1114:
  1825  000DB2  2E37               	decfsz	??_musica^0,f,c
  1826  000DB4  EFD7  F006         	goto	u1115
  1827  000DB8  5038               	movf	(??_musica+1)^0,w,c
  1828  000DBA  0AFF               	xorlw	255
  1829  000DBC  1681               	andwf	129,f,c	;volatile
  1830  000DBE                     
  1831                           ;main.c: 200:         atraso_ms(atrasoMax);
  1832  000DBE  0E03               	movlw	3
  1833  000DC0  6E02               	movwf	(atraso_ms@t+1)^0,c
  1834  000DC2  0EE8               	movlw	232
  1835  000DC4  6E01               	movwf	atraso_ms@t^0,c
  1836  000DC6  EC2D  F00A         	call	_atraso_ms	;wreg free
  1837                           
  1838                           ;main.c: 201:         (*(volatile __near unsigned char*)0xF81) = 0x00;
  1839  000DCA  0E00               	movlw	0
  1840  000DCC  6E81               	movwf	129,c	;volatile
  1841                           
  1842                           ;main.c: 203:         (*(volatile __near unsigned char*)0xF95)=0x0F;
  1843  000DCE  0E0F               	movlw	15
  1844  000DD0  6E95               	movwf	149,c	;volatile
  1845  000DD2                     
  1846                           ;main.c: 204:         tmp=tc_tecla(1000)+0x30;
  1847  000DD2  0E03               	movlw	3
  1848  000DD4  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1849  000DD6  0EE8               	movlw	232
  1850  000DD8  6E07               	movwf	tc_tecla@timeout^0,c
  1851  000DDA  ECB2  F004         	call	_tc_tecla	;wreg free
  1852  000DDE  0F30               	addlw	48
  1853  000DE0  6E39               	movwf	musica@tmp^0,c
  1854  000DE2                     
  1855                           ;main.c: 205:         (*(volatile __near unsigned char*)0xF95)=0x00;
  1856  000DE2  0E00               	movlw	0
  1857  000DE4  6E95               	movwf	149,c	;volatile
  1858  000DE6                     
  1859                           ;main.c: 207:         if(tmp == mscC[i]){
  1860  000DE6  503A               	movf	musica@i^0,w,c
  1861  000DE8  2433               	addwf	musica@mscC^0,w,c
  1862  000DEA  6ED9               	movwf	fsr2l,c
  1863  000DEC  0E00               	movlw	0
  1864  000DEE  2034               	addwfc	(musica@mscC+1)^0,w,c
  1865  000DF0  6EDA               	movwf	fsr2h,c
  1866  000DF2  5039               	movf	musica@tmp^0,w,c
  1867  000DF4  18DE               	xorwf	postinc2,w,c
  1868  000DF6  A4D8               	btfss	status,2,c
  1869  000DF8  EF00  F007         	goto	u1121
  1870  000DFC  EF02  F007         	goto	u1120
  1871  000E00                     u1121:
  1872  000E00  EF10  F007         	goto	l1890
  1873  000E04                     u1120:
  1874  000E04                     
  1875                           ;main.c: 209:             cont += 250;
  1876  000E04  0EFA               	movlw	250
  1877  000E06  266D               	addwf	_cont^0,f,c
  1878  000E08  0E00               	movlw	0
  1879  000E0A  226E               	addwfc	(_cont+1)^0,f,c
  1880  000E0C  226F               	addwfc	(_cont+2)^0,f,c
  1881  000E0E  2270               	addwfc	(_cont+3)^0,f,c
  1882  000E10                     
  1883                           ;main.c: 210:             pontua();
  1884  000E10  EC73  F003         	call	_pontua	;wreg free
  1885  000E14                     
  1886                           ;main.c: 211:             buzzer(op);
  1887  000E14  C035  F00D         	movff	musica@op,buzzer@op
  1888  000E18  C036  F00E         	movff	musica@op+1,buzzer@op+1
  1889  000E1C  ECC2  F009         	call	_buzzer	;wreg free
  1890  000E20                     l1890:
  1891                           
  1892                           ;main.c: 213:         (*(volatile __near unsigned char*)0xF81) = 0x3F;
  1893  000E20  0E3F               	movlw	63
  1894  000E22  6E81               	movwf	129,c	;volatile
  1895  000E24                     
  1896                           ;main.c: 214:         (*(volatile __near unsigned char*)0xF83) = 0x3F;
  1897  000E24  0E3F               	movlw	63
  1898  000E26  6E83               	movwf	131,c	;volatile
  1899  000E28                     
  1900                           ;main.c: 215:     }
  1901  000E28  2A3A               	incf	musica@i^0,f,c
  1902  000E2A  0E13               	movlw	19
  1903  000E2C  643A               	cpfsgt	musica@i^0,c
  1904  000E2E  EF1B  F007         	goto	u1131
  1905  000E32  EF1D  F007         	goto	u1130
  1906  000E36                     u1131:
  1907  000E36  EFAE  F006         	goto	l1868
  1908  000E3A                     u1130:
  1909  000E3A  0012               	return		;funcret
  1910  000E3C                     __end_of_musica:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _tc_tecla *****************
  1914 ;; Defined at:
  1915 ;;		line 14 in file "teclado.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  timeout         2    6[COMRAM] unsigned int 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  to              2    8[COMRAM] unsigned int 
  1920 ;;  i               1   12[COMRAM] unsigned char 
  1921 ;;  ret             1   11[COMRAM] unsigned char 
  1922 ;;  tmp             1   10[COMRAM] unsigned char 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      unsigned char 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1932 ;;      Params:         2       0       0       0       0       0       0
  1933 ;;      Locals:         5       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0
  1935 ;;      Totals:         7       0       0       0       0       0       0
  1936 ;;Total ram usage:        7 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    1
  1939 ;; This function calls:
  1940 ;;		_atraso_ms
  1941 ;; This function is called by:
  1942 ;;		_musica
  1943 ;;		_menu
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text7
  1948  000964                     __ptext7:
  1949                           	callstack 0
  1950  000964                     _tc_tecla:
  1951                           	callstack 28
  1952  000964                     
  1953                           ;teclado.c: 15:     unsigned int to = 0;
  1954  000964  0E00               	movlw	0
  1955  000966  6E0A               	movwf	(tc_tecla@to+1)^0,c
  1956  000968  0E00               	movlw	0
  1957  00096A  6E09               	movwf	tc_tecla@to^0,c
  1958                           
  1959                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  1960  00096C  0E00               	movlw	0
  1961  00096E  6E0C               	movwf	tc_tecla@ret^0,c
  1962  000970                     
  1963                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  1964  000970  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  1965                           
  1966                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  1967  000974  EF63  F005         	goto	l1796
  1968  000978                     l1744:
  1969                           
  1970                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  1971  000978  0E00               	movlw	0
  1972  00097A  6E0D               	movwf	tc_tecla@i^0,c
  1973  00097C                     l1750:
  1974                           
  1975                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  1976  00097C  0E01               	movlw	low _linha
  1977  00097E  240D               	addwf	tc_tecla@i^0,w,c
  1978  000980  6EF6               	movwf	tblptrl,c
  1979  000982  6AF7               	clrf	tblptrh,c
  1980  000984  0E06               	movlw	high _linha
  1981  000986  22F7               	addwfc	tblptrh,f,c
  1982  000988                     	if	0	;There are less than 3 active tblptr bytes
  1983  000988                     	endif
  1984  000988  0008               	tblrd		*
  1985  00098A  50F5               	movf	tablat,w,c
  1986  00098C  0AFF               	xorlw	255
  1987  00098E  1281               	iorwf	129,f,c	;volatile
  1988  000990                     
  1989                           ;teclado.c: 25:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  1990  000990  B683               	btfsc	131,3,c	;volatile
  1991  000992  EFCD  F004         	goto	u901
  1992  000996  EFCF  F004         	goto	u900
  1993  00099A                     u901:
  1994  00099A  EFE7  F004         	goto	l146
  1995  00099E                     u900:
  1996  00099E                     
  1997                           ;teclado.c: 26:                 atraso_ms(atraso);
  1998  00099E  0E00               	movlw	0
  1999  0009A0  6E02               	movwf	(atraso_ms@t+1)^0,c
  2000  0009A2  0E0F               	movlw	15
  2001  0009A4  6E01               	movwf	atraso_ms@t^0,c
  2002  0009A6  EC2D  F00A         	call	_atraso_ms	;wreg free
  2003  0009AA                     
  2004                           ;teclado.c: 27:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  2005  0009AA  B683               	btfsc	131,3,c	;volatile
  2006  0009AC  EFDA  F004         	goto	u911
  2007  0009B0  EFDC  F004         	goto	u910
  2008  0009B4                     u911:
  2009  0009B4  EFE7  F004         	goto	l146
  2010  0009B8                     u910:
  2011  0009B8                     l148:
  2012  0009B8  A683               	btfss	131,3,c	;volatile
  2013  0009BA  EFE1  F004         	goto	u921
  2014  0009BE  EFE3  F004         	goto	u920
  2015  0009C2                     u921:
  2016  0009C2  EFDC  F004         	goto	l148
  2017  0009C6                     u920:
  2018  0009C6                     
  2019                           ;teclado.c: 29:                     ret = 1 + i;
  2020  0009C6  280D               	incf	tc_tecla@i^0,w,c
  2021  0009C8  6E0C               	movwf	tc_tecla@ret^0,c
  2022                           
  2023                           ;teclado.c: 30:                     break;
  2024  0009CA  EF59  F005         	goto	l1792
  2025  0009CE                     l146:
  2026                           
  2027                           ;teclado.c: 34:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  2028  0009CE  B483               	btfsc	131,2,c	;volatile
  2029  0009D0  EFEC  F004         	goto	u931
  2030  0009D4  EFEE  F004         	goto	u930
  2031  0009D8                     u931:
  2032  0009D8  EF07  F005         	goto	l151
  2033  0009DC                     u930:
  2034  0009DC                     
  2035                           ;teclado.c: 35:                 atraso_ms(atraso);
  2036  0009DC  0E00               	movlw	0
  2037  0009DE  6E02               	movwf	(atraso_ms@t+1)^0,c
  2038  0009E0  0E0F               	movlw	15
  2039  0009E2  6E01               	movwf	atraso_ms@t^0,c
  2040  0009E4  EC2D  F00A         	call	_atraso_ms	;wreg free
  2041  0009E8                     
  2042                           ;teclado.c: 36:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  2043  0009E8  B483               	btfsc	131,2,c	;volatile
  2044  0009EA  EFF9  F004         	goto	u941
  2045  0009EE  EFFB  F004         	goto	u940
  2046  0009F2                     u941:
  2047  0009F2  EF07  F005         	goto	l151
  2048  0009F6                     u940:
  2049  0009F6                     l153:
  2050  0009F6  A483               	btfss	131,2,c	;volatile
  2051  0009F8  EF00  F005         	goto	u951
  2052  0009FC  EF02  F005         	goto	u950
  2053  000A00                     u951:
  2054  000A00  EFFB  F004         	goto	l153
  2055  000A04                     u950:
  2056  000A04                     
  2057                           ;teclado.c: 38:                     ret = 4 + i;
  2058  000A04  500D               	movf	tc_tecla@i^0,w,c
  2059  000A06  0F04               	addlw	4
  2060  000A08  6E0C               	movwf	tc_tecla@ret^0,c
  2061                           
  2062                           ;teclado.c: 39:                     break;
  2063  000A0A  EF59  F005         	goto	l1792
  2064  000A0E                     l151:
  2065                           
  2066                           ;teclado.c: 42:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  2067  000A0E  B283               	btfsc	131,1,c	;volatile
  2068  000A10  EF0C  F005         	goto	u961
  2069  000A14  EF0E  F005         	goto	u960
  2070  000A18                     u961:
  2071  000A18  EF27  F005         	goto	l156
  2072  000A1C                     u960:
  2073  000A1C                     
  2074                           ;teclado.c: 43:                 atraso_ms(atraso);
  2075  000A1C  0E00               	movlw	0
  2076  000A1E  6E02               	movwf	(atraso_ms@t+1)^0,c
  2077  000A20  0E0F               	movlw	15
  2078  000A22  6E01               	movwf	atraso_ms@t^0,c
  2079  000A24  EC2D  F00A         	call	_atraso_ms	;wreg free
  2080  000A28                     
  2081                           ;teclado.c: 44:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  2082  000A28  B283               	btfsc	131,1,c	;volatile
  2083  000A2A  EF19  F005         	goto	u971
  2084  000A2E  EF1B  F005         	goto	u970
  2085  000A32                     u971:
  2086  000A32  EF27  F005         	goto	l156
  2087  000A36                     u970:
  2088  000A36                     l158:
  2089  000A36  A283               	btfss	131,1,c	;volatile
  2090  000A38  EF20  F005         	goto	u981
  2091  000A3C  EF22  F005         	goto	u980
  2092  000A40                     u981:
  2093  000A40  EF1B  F005         	goto	l158
  2094  000A44                     u980:
  2095  000A44                     
  2096                           ;teclado.c: 46:                     ret = 7 + i;
  2097  000A44  500D               	movf	tc_tecla@i^0,w,c
  2098  000A46  0F07               	addlw	7
  2099  000A48  6E0C               	movwf	tc_tecla@ret^0,c
  2100                           
  2101                           ;teclado.c: 47:                     break;
  2102  000A4A  EF59  F005         	goto	l1792
  2103  000A4E                     l156:
  2104                           
  2105                           ;teclado.c: 50:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  2106  000A4E  B083               	btfsc	131,0,c	;volatile
  2107  000A50  EF2C  F005         	goto	u991
  2108  000A54  EF2E  F005         	goto	u990
  2109  000A58                     u991:
  2110  000A58  EF47  F005         	goto	l1786
  2111  000A5C                     u990:
  2112  000A5C                     
  2113                           ;teclado.c: 51:                 atraso_ms(atraso);
  2114  000A5C  0E00               	movlw	0
  2115  000A5E  6E02               	movwf	(atraso_ms@t+1)^0,c
  2116  000A60  0E0F               	movlw	15
  2117  000A62  6E01               	movwf	atraso_ms@t^0,c
  2118  000A64  EC2D  F00A         	call	_atraso_ms	;wreg free
  2119  000A68                     
  2120                           ;teclado.c: 52:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  2121  000A68  B083               	btfsc	131,0,c	;volatile
  2122  000A6A  EF39  F005         	goto	u1001
  2123  000A6E  EF3B  F005         	goto	u1000
  2124  000A72                     u1001:
  2125  000A72  EF47  F005         	goto	l1786
  2126  000A76                     u1000:
  2127  000A76                     l163:
  2128  000A76  A083               	btfss	131,0,c	;volatile
  2129  000A78  EF40  F005         	goto	u1011
  2130  000A7C  EF42  F005         	goto	u1010
  2131  000A80                     u1011:
  2132  000A80  EF3B  F005         	goto	l163
  2133  000A84                     u1010:
  2134  000A84                     
  2135                           ;teclado.c: 54:                     ret = 10 + i;
  2136  000A84  500D               	movf	tc_tecla@i^0,w,c
  2137  000A86  0F0A               	addlw	10
  2138  000A88  6E0C               	movwf	tc_tecla@ret^0,c
  2139                           
  2140                           ;teclado.c: 55:                     break;
  2141  000A8A  EF59  F005         	goto	l1792
  2142  000A8E                     l1786:
  2143                           
  2144                           ;teclado.c: 58:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  2145  000A8E  0E01               	movlw	low _linha
  2146  000A90  240D               	addwf	tc_tecla@i^0,w,c
  2147  000A92  6EF6               	movwf	tblptrl,c
  2148  000A94  6AF7               	clrf	tblptrh,c
  2149  000A96  0E06               	movlw	high _linha
  2150  000A98  22F7               	addwfc	tblptrh,f,c
  2151  000A9A                     	if	0	;There are less than 3 active tblptr bytes
  2152  000A9A                     	endif
  2153  000A9A  0008               	tblrd		*
  2154  000A9C  50F5               	movf	tablat,w,c
  2155  000A9E  1681               	andwf	129,f,c	;volatile
  2156  000AA0                     
  2157                           ;teclado.c: 59:         };
  2158  000AA0  2A0D               	incf	tc_tecla@i^0,f,c
  2159  000AA2  0E02               	movlw	2
  2160  000AA4  640D               	cpfsgt	tc_tecla@i^0,c
  2161  000AA6  EF57  F005         	goto	u1021
  2162  000AAA  EF59  F005         	goto	u1020
  2163  000AAE                     u1021:
  2164  000AAE  EFBE  F004         	goto	l1750
  2165  000AB2                     u1020:
  2166  000AB2                     l1792:
  2167                           
  2168                           ;teclado.c: 60:         atraso_ms(atraso_min);
  2169  000AB2  0E00               	movlw	0
  2170  000AB4  6E02               	movwf	(atraso_ms@t+1)^0,c
  2171  000AB6  0E05               	movlw	5
  2172  000AB8  6E01               	movwf	atraso_ms@t^0,c
  2173  000ABA  EC2D  F00A         	call	_atraso_ms	;wreg free
  2174  000ABE                     
  2175                           ;teclado.c: 61:         to += 5;
  2176  000ABE  0E05               	movlw	5
  2177  000AC0  2609               	addwf	tc_tecla@to^0,f,c
  2178  000AC2  0E00               	movlw	0
  2179  000AC4  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  2180  000AC6                     l1796:
  2181                           
  2182                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  2183  000AC6  5007               	movf	tc_tecla@timeout^0,w,c
  2184  000AC8  5C09               	subwf	tc_tecla@to^0,w,c
  2185  000ACA  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  2186  000ACC  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  2187  000ACE  A0D8               	btfss	status,0,c
  2188  000AD0  EF6C  F005         	goto	u1031
  2189  000AD4  EF6E  F005         	goto	u1030
  2190  000AD8                     u1031:
  2191  000AD8  EF77  F005         	goto	l1800
  2192  000ADC                     u1030:
  2193  000ADC  5007               	movf	tc_tecla@timeout^0,w,c
  2194  000ADE  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  2195  000AE0  A4D8               	btfss	status,2,c
  2196  000AE2  EF75  F005         	goto	u1041
  2197  000AE6  EF77  F005         	goto	u1040
  2198  000AEA                     u1041:
  2199  000AEA  EF7F  F005         	goto	l1802
  2200  000AEE                     u1040:
  2201  000AEE                     l1800:
  2202  000AEE  500C               	movf	tc_tecla@ret^0,w,c
  2203  000AF0  B4D8               	btfsc	status,2,c
  2204  000AF2  EF7D  F005         	goto	u1051
  2205  000AF6  EF7F  F005         	goto	u1050
  2206  000AFA                     u1051:
  2207  000AFA  EFBC  F004         	goto	l1744
  2208  000AFE                     u1050:
  2209  000AFE                     l1802:
  2210                           
  2211                           ;teclado.c: 64:     if (!ret)ret = 255;
  2212  000AFE  500C               	movf	tc_tecla@ret^0,w,c
  2213  000B00  A4D8               	btfss	status,2,c
  2214  000B02  EF85  F005         	goto	u1061
  2215  000B06  EF87  F005         	goto	u1060
  2216  000B0A                     u1061:
  2217  000B0A  EF88  F005         	goto	l1806
  2218  000B0E                     u1060:
  2219  000B0E  680C               	setf	tc_tecla@ret^0,c
  2220  000B10                     l1806:
  2221                           
  2222                           ;teclado.c: 65:     if (ret == 11)ret = 0;
  2223  000B10  0E0B               	movlw	11
  2224  000B12  180C               	xorwf	tc_tecla@ret^0,w,c
  2225  000B14  A4D8               	btfss	status,2,c
  2226  000B16  EF8F  F005         	goto	u1071
  2227  000B1A  EF91  F005         	goto	u1070
  2228  000B1E                     u1071:
  2229  000B1E  EF93  F005         	goto	l1810
  2230  000B22                     u1070:
  2231  000B22  0E00               	movlw	0
  2232  000B24  6E0C               	movwf	tc_tecla@ret^0,c
  2233  000B26                     l1810:
  2234                           
  2235                           ;teclado.c: 66:     (*(volatile __near unsigned char*)0xF81) = tmp;
  2236  000B26  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  2237                           
  2238                           ;teclado.c: 67:     return ret;
  2239  000B2A  500C               	movf	tc_tecla@ret^0,w,c
  2240  000B2C  0012               	return		;funcret
  2241  000B2E                     __end_of_tc_tecla:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _pontua *****************
  2245 ;; Defined at:
  2246 ;;		line 20 in file "main.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  decimal        20   22[COMRAM] int [10]
  2251 ;;  k               2   46[COMRAM] int 
  2252 ;;  delay           2   44[COMRAM] unsigned int 
  2253 ;;  i               2   42[COMRAM] int 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2263 ;;      Params:         0       0       0       0       0       0       0
  2264 ;;      Locals:        26       0       0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0
  2266 ;;      Totals:        26       0       0       0       0       0       0
  2267 ;;Total ram usage:       26 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    1
  2270 ;; This function calls:
  2271 ;;		___lldiv
  2272 ;;		___llmod
  2273 ;; This function is called by:
  2274 ;;		_musica
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text8
  2279  0006E6                     __ptext8:
  2280                           	callstack 0
  2281  0006E6                     _pontua:
  2282                           	callstack 27
  2283  0006E6                     
  2284                           ;main.c: 21:     (((*(volatile __near unsigned char*)0xFF1)) &= ~(1<<7));
  2285  0006E6  9EF1               	bcf	241,7,c	;volatile
  2286  0006E8                     
  2287                           ;main.c: 22:     (*(volatile __near unsigned char*)0xFC1) = 0x0E;
  2288  0006E8  0E0E               	movlw	14
  2289  0006EA  6EC1               	movwf	193,c	;volatile
  2290  0006EC                     
  2291                           ;main.c: 23:     (*(volatile __near unsigned char*)0xF92) = 0x00;
  2292  0006EC  0E00               	movlw	0
  2293  0006EE  6E92               	movwf	146,c	;volatile
  2294  0006F0                     
  2295                           ;main.c: 24:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  2296  0006F0  0E00               	movlw	0
  2297  0006F2  6E95               	movwf	149,c	;volatile
  2298  0006F4                     
  2299                           ;main.c: 25:     (*(volatile __near unsigned char*)0xF83) = 0x00;
  2300  0006F4  0E00               	movlw	0
  2301  0006F6  6E83               	movwf	131,c	;volatile
  2302  0006F8                     
  2303                           ;main.c: 27:     int k;;main.c: 28:     int decimal[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66,
      +                           0x6D, 0x7D, 0x07, 0x7F, 0x6F};
  2304  0006F8  EE20  F04F         	lfsr	2,pontua@F22
  2305  0006FC  EE10  F017         	lfsr	1,pontua@decimal
  2306  000700  0E13               	movlw	19
  2307  000702                     u791:
  2308  000702  CFDB FFE3          	movff	plusw2,plusw1
  2309  000706  06E8               	decf	wreg,f,c
  2310  000708  E2FC               	bc	u791
  2311  00070A                     
  2312                           ;main.c: 29:     int unsigned delay = 100;
  2313  00070A  0E00               	movlw	0
  2314  00070C  6E2E               	movwf	(pontua@delay+1)^0,c
  2315  00070E  0E64               	movlw	100
  2316  000710  6E2D               	movwf	pontua@delay^0,c
  2317  000712                     
  2318                           ;main.c: 30:     int i;;main.c: 32:     for(i = 0;i < 100;i++){
  2319  000712  0E00               	movlw	0
  2320  000714  6E2C               	movwf	(pontua@i+1)^0,c
  2321  000716  0E00               	movlw	0
  2322  000718  6E2B               	movwf	pontua@i^0,c
  2323  00071A                     l1590:
  2324                           
  2325                           ;main.c: 34:         (*(volatile __near unsigned char*)0xF83) = decimal[(cont/10)%10];
  2326  00071A  0E0A               	movlw	10
  2327  00071C  6E05               	movwf	___lldiv@divisor^0,c
  2328  00071E  0E00               	movlw	0
  2329  000720  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2330  000722  0E00               	movlw	0
  2331  000724  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2332  000726  0E00               	movlw	0
  2333  000728  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2334  00072A  C06D  F001         	movff	_cont,___lldiv@dividend
  2335  00072E  C06E  F002         	movff	_cont+1,___lldiv@dividend+1
  2336  000732  C06F  F003         	movff	_cont+2,___lldiv@dividend+2
  2337  000736  C070  F004         	movff	_cont+3,___lldiv@dividend+3
  2338  00073A  EC7D  F008         	call	___lldiv	;wreg free
  2339  00073E  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2340  000742  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2341  000746  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2342  00074A  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2343  00074E  0E0A               	movlw	10
  2344  000750  6E12               	movwf	___llmod@divisor^0,c
  2345  000752  0E00               	movlw	0
  2346  000754  6E13               	movwf	(___llmod@divisor+1)^0,c
  2347  000756  0E00               	movlw	0
  2348  000758  6E14               	movwf	(___llmod@divisor+2)^0,c
  2349  00075A  0E00               	movlw	0
  2350  00075C  6E15               	movwf	(___llmod@divisor+3)^0,c
  2351  00075E  ECCF  F008         	call	___llmod	;wreg free
  2352  000762  90D8               	bcf	status,0,c
  2353  000764  360E               	rlcf	?___llmod^0,f,c
  2354  000766  360F               	rlcf	(?___llmod+1)^0,f,c
  2355  000768  0E17               	movlw	low pontua@decimal
  2356  00076A  240E               	addwf	?___llmod^0,w,c
  2357  00076C  6ED9               	movwf	fsr2l,c
  2358  00076E  0E00               	movlw	high pontua@decimal
  2359  000770  200F               	addwfc	(?___llmod+1)^0,w,c
  2360  000772  6EDA               	movwf	fsr2h,c
  2361  000774  50DF               	movf	indf2,w,c
  2362  000776  6E83               	movwf	131,c	;volatile
  2363  000778                     
  2364                           ;main.c: 35:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2365  000778  8A80               	bsf	128,5,c	;volatile
  2366  00077A                     
  2367                           ;main.c: 36:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  2368  00077A  9880               	bcf	128,4,c	;volatile
  2369  00077C                     
  2370                           ;main.c: 37:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<3));
  2371  00077C  9680               	bcf	128,3,c	;volatile
  2372  00077E                     
  2373                           ;main.c: 38:         for(k = 0; k < delay; k++);
  2374  00077E  0E00               	movlw	0
  2375  000780  6E30               	movwf	(pontua@k+1)^0,c
  2376  000782  0E00               	movlw	0
  2377  000784  6E2F               	movwf	pontua@k^0,c
  2378  000786  EFC7  F003         	goto	l1602
  2379  00078A                     l1600:
  2380  00078A  4A2F               	infsnz	pontua@k^0,f,c
  2381  00078C  2A30               	incf	(pontua@k+1)^0,f,c
  2382  00078E                     l1602:
  2383  00078E  502D               	movf	pontua@delay^0,w,c
  2384  000790  5C2F               	subwf	pontua@k^0,w,c
  2385  000792  502E               	movf	(pontua@delay+1)^0,w,c
  2386  000794  5830               	subwfb	(pontua@k+1)^0,w,c
  2387  000796  A0D8               	btfss	status,0,c
  2388  000798  EFD0  F003         	goto	u801
  2389  00079C  EFD2  F003         	goto	u800
  2390  0007A0                     u801:
  2391  0007A0  EFC5  F003         	goto	l1600
  2392  0007A4                     u800:
  2393  0007A4                     
  2394                           ;main.c: 40:         (*(volatile __near unsigned char*)0xF83) = decimal[(cont/100)%10];
  2395  0007A4  0E64               	movlw	100
  2396  0007A6  6E05               	movwf	___lldiv@divisor^0,c
  2397  0007A8  0E00               	movlw	0
  2398  0007AA  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2399  0007AC  0E00               	movlw	0
  2400  0007AE  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2401  0007B0  0E00               	movlw	0
  2402  0007B2  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2403  0007B4  C06D  F001         	movff	_cont,___lldiv@dividend
  2404  0007B8  C06E  F002         	movff	_cont+1,___lldiv@dividend+1
  2405  0007BC  C06F  F003         	movff	_cont+2,___lldiv@dividend+2
  2406  0007C0  C070  F004         	movff	_cont+3,___lldiv@dividend+3
  2407  0007C4  EC7D  F008         	call	___lldiv	;wreg free
  2408  0007C8  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2409  0007CC  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2410  0007D0  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2411  0007D4  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2412  0007D8  0E0A               	movlw	10
  2413  0007DA  6E12               	movwf	___llmod@divisor^0,c
  2414  0007DC  0E00               	movlw	0
  2415  0007DE  6E13               	movwf	(___llmod@divisor+1)^0,c
  2416  0007E0  0E00               	movlw	0
  2417  0007E2  6E14               	movwf	(___llmod@divisor+2)^0,c
  2418  0007E4  0E00               	movlw	0
  2419  0007E6  6E15               	movwf	(___llmod@divisor+3)^0,c
  2420  0007E8  ECCF  F008         	call	___llmod	;wreg free
  2421  0007EC  90D8               	bcf	status,0,c
  2422  0007EE  360E               	rlcf	?___llmod^0,f,c
  2423  0007F0  360F               	rlcf	(?___llmod+1)^0,f,c
  2424  0007F2  0E17               	movlw	low pontua@decimal
  2425  0007F4  240E               	addwf	?___llmod^0,w,c
  2426  0007F6  6ED9               	movwf	fsr2l,c
  2427  0007F8  0E00               	movlw	high pontua@decimal
  2428  0007FA  200F               	addwfc	(?___llmod+1)^0,w,c
  2429  0007FC  6EDA               	movwf	fsr2h,c
  2430  0007FE  50DF               	movf	indf2,w,c
  2431  000800  6E83               	movwf	131,c	;volatile
  2432  000802                     
  2433                           ;main.c: 41:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2434  000802  9A80               	bcf	128,5,c	;volatile
  2435  000804                     
  2436                           ;main.c: 42:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  2437  000804  8880               	bsf	128,4,c	;volatile
  2438  000806                     
  2439                           ;main.c: 43:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<3));
  2440  000806  9680               	bcf	128,3,c	;volatile
  2441  000808                     
  2442                           ;main.c: 44:         for(k = 0; k < delay; k++);
  2443  000808  0E00               	movlw	0
  2444  00080A  6E30               	movwf	(pontua@k+1)^0,c
  2445  00080C  0E00               	movlw	0
  2446  00080E  6E2F               	movwf	pontua@k^0,c
  2447  000810  EF0C  F004         	goto	l1616
  2448  000814                     l1614:
  2449  000814  4A2F               	infsnz	pontua@k^0,f,c
  2450  000816  2A30               	incf	(pontua@k+1)^0,f,c
  2451  000818                     l1616:
  2452  000818  502D               	movf	pontua@delay^0,w,c
  2453  00081A  5C2F               	subwf	pontua@k^0,w,c
  2454  00081C  502E               	movf	(pontua@delay+1)^0,w,c
  2455  00081E  5830               	subwfb	(pontua@k+1)^0,w,c
  2456  000820  A0D8               	btfss	status,0,c
  2457  000822  EF15  F004         	goto	u811
  2458  000826  EF17  F004         	goto	u810
  2459  00082A                     u811:
  2460  00082A  EF0A  F004         	goto	l1614
  2461  00082E                     u810:
  2462  00082E                     
  2463                           ;main.c: 46:         (*(volatile __near unsigned char*)0xF83) = decimal[(cont/1000)%10];
  2464  00082E  0EE8               	movlw	232
  2465  000830  6E05               	movwf	___lldiv@divisor^0,c
  2466  000832  0E03               	movlw	3
  2467  000834  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2468  000836  0E00               	movlw	0
  2469  000838  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2470  00083A  0E00               	movlw	0
  2471  00083C  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2472  00083E  C06D  F001         	movff	_cont,___lldiv@dividend
  2473  000842  C06E  F002         	movff	_cont+1,___lldiv@dividend+1
  2474  000846  C06F  F003         	movff	_cont+2,___lldiv@dividend+2
  2475  00084A  C070  F004         	movff	_cont+3,___lldiv@dividend+3
  2476  00084E  EC7D  F008         	call	___lldiv	;wreg free
  2477  000852  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2478  000856  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2479  00085A  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2480  00085E  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2481  000862  0E0A               	movlw	10
  2482  000864  6E12               	movwf	___llmod@divisor^0,c
  2483  000866  0E00               	movlw	0
  2484  000868  6E13               	movwf	(___llmod@divisor+1)^0,c
  2485  00086A  0E00               	movlw	0
  2486  00086C  6E14               	movwf	(___llmod@divisor+2)^0,c
  2487  00086E  0E00               	movlw	0
  2488  000870  6E15               	movwf	(___llmod@divisor+3)^0,c
  2489  000872  ECCF  F008         	call	___llmod	;wreg free
  2490  000876  90D8               	bcf	status,0,c
  2491  000878  360E               	rlcf	?___llmod^0,f,c
  2492  00087A  360F               	rlcf	(?___llmod+1)^0,f,c
  2493  00087C  0E17               	movlw	low pontua@decimal
  2494  00087E  240E               	addwf	?___llmod^0,w,c
  2495  000880  6ED9               	movwf	fsr2l,c
  2496  000882  0E00               	movlw	high pontua@decimal
  2497  000884  200F               	addwfc	(?___llmod+1)^0,w,c
  2498  000886  6EDA               	movwf	fsr2h,c
  2499  000888  50DF               	movf	indf2,w,c
  2500  00088A  6E83               	movwf	131,c	;volatile
  2501  00088C                     
  2502                           ;main.c: 47:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2503  00088C  9A80               	bcf	128,5,c	;volatile
  2504  00088E                     
  2505                           ;main.c: 48:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  2506  00088E  9880               	bcf	128,4,c	;volatile
  2507  000890                     
  2508                           ;main.c: 49:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<3));
  2509  000890  8680               	bsf	128,3,c	;volatile
  2510  000892                     
  2511                           ;main.c: 50:         for(k = 0; k < delay; k++);
  2512  000892  0E00               	movlw	0
  2513  000894  6E30               	movwf	(pontua@k+1)^0,c
  2514  000896  0E00               	movlw	0
  2515  000898  6E2F               	movwf	pontua@k^0,c
  2516  00089A  EF51  F004         	goto	l1630
  2517  00089E                     l1628:
  2518  00089E  4A2F               	infsnz	pontua@k^0,f,c
  2519  0008A0  2A30               	incf	(pontua@k+1)^0,f,c
  2520  0008A2                     l1630:
  2521  0008A2  502D               	movf	pontua@delay^0,w,c
  2522  0008A4  5C2F               	subwf	pontua@k^0,w,c
  2523  0008A6  502E               	movf	(pontua@delay+1)^0,w,c
  2524  0008A8  5830               	subwfb	(pontua@k+1)^0,w,c
  2525  0008AA  A0D8               	btfss	status,0,c
  2526  0008AC  EF5A  F004         	goto	u821
  2527  0008B0  EF5C  F004         	goto	u820
  2528  0008B4                     u821:
  2529  0008B4  EF4F  F004         	goto	l1628
  2530  0008B8                     u820:
  2531  0008B8                     
  2532                           ;main.c: 52:         (*(volatile __near unsigned char*)0xF83) = decimal[(cont/10000)%10]
      +                          ;
  2533  0008B8  0E10               	movlw	16
  2534  0008BA  6E05               	movwf	___lldiv@divisor^0,c
  2535  0008BC  0E27               	movlw	39
  2536  0008BE  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2537  0008C0  0E00               	movlw	0
  2538  0008C2  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2539  0008C4  0E00               	movlw	0
  2540  0008C6  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2541  0008C8  C06D  F001         	movff	_cont,___lldiv@dividend
  2542  0008CC  C06E  F002         	movff	_cont+1,___lldiv@dividend+1
  2543  0008D0  C06F  F003         	movff	_cont+2,___lldiv@dividend+2
  2544  0008D4  C070  F004         	movff	_cont+3,___lldiv@dividend+3
  2545  0008D8  EC7D  F008         	call	___lldiv	;wreg free
  2546  0008DC  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2547  0008E0  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2548  0008E4  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2549  0008E8  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2550  0008EC  0E0A               	movlw	10
  2551  0008EE  6E12               	movwf	___llmod@divisor^0,c
  2552  0008F0  0E00               	movlw	0
  2553  0008F2  6E13               	movwf	(___llmod@divisor+1)^0,c
  2554  0008F4  0E00               	movlw	0
  2555  0008F6  6E14               	movwf	(___llmod@divisor+2)^0,c
  2556  0008F8  0E00               	movlw	0
  2557  0008FA  6E15               	movwf	(___llmod@divisor+3)^0,c
  2558  0008FC  ECCF  F008         	call	___llmod	;wreg free
  2559  000900  90D8               	bcf	status,0,c
  2560  000902  360E               	rlcf	?___llmod^0,f,c
  2561  000904  360F               	rlcf	(?___llmod+1)^0,f,c
  2562  000906  0E17               	movlw	low pontua@decimal
  2563  000908  240E               	addwf	?___llmod^0,w,c
  2564  00090A  6ED9               	movwf	fsr2l,c
  2565  00090C  0E00               	movlw	high pontua@decimal
  2566  00090E  200F               	addwfc	(?___llmod+1)^0,w,c
  2567  000910  6EDA               	movwf	fsr2h,c
  2568  000912  50DF               	movf	indf2,w,c
  2569  000914  6E83               	movwf	131,c	;volatile
  2570  000916                     
  2571                           ;main.c: 53:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2572  000916  9A80               	bcf	128,5,c	;volatile
  2573  000918                     
  2574                           ;main.c: 54:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  2575  000918  9880               	bcf	128,4,c	;volatile
  2576  00091A                     
  2577                           ;main.c: 55:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<3));
  2578  00091A  9680               	bcf	128,3,c	;volatile
  2579  00091C                     
  2580                           ;main.c: 56:         for(k = 0; k < delay; k++);
  2581  00091C  0E00               	movlw	0
  2582  00091E  6E30               	movwf	(pontua@k+1)^0,c
  2583  000920  0E00               	movlw	0
  2584  000922  6E2F               	movwf	pontua@k^0,c
  2585  000924  EF96  F004         	goto	l1644
  2586  000928                     l1642:
  2587  000928  4A2F               	infsnz	pontua@k^0,f,c
  2588  00092A  2A30               	incf	(pontua@k+1)^0,f,c
  2589  00092C                     l1644:
  2590  00092C  502D               	movf	pontua@delay^0,w,c
  2591  00092E  5C2F               	subwf	pontua@k^0,w,c
  2592  000930  502E               	movf	(pontua@delay+1)^0,w,c
  2593  000932  5830               	subwfb	(pontua@k+1)^0,w,c
  2594  000934  A0D8               	btfss	status,0,c
  2595  000936  EF9F  F004         	goto	u831
  2596  00093A  EFA1  F004         	goto	u830
  2597  00093E                     u831:
  2598  00093E  EF94  F004         	goto	l1642
  2599  000942                     u830:
  2600  000942                     
  2601                           ;main.c: 58:     }
  2602  000942  4A2B               	infsnz	pontua@i^0,f,c
  2603  000944  2A2C               	incf	(pontua@i+1)^0,f,c
  2604  000946  BE2C               	btfsc	(pontua@i+1)^0,7,c
  2605  000948  EFAF  F004         	goto	u841
  2606  00094C  502C               	movf	(pontua@i+1)^0,w,c
  2607  00094E  E109               	bnz	u840
  2608  000950  0E64               	movlw	100
  2609  000952  5C2B               	subwf	pontua@i^0,w,c
  2610  000954  A0D8               	btfss	status,0,c
  2611  000956  EFAF  F004         	goto	u841
  2612  00095A  EFB1  F004         	goto	u840
  2613  00095E                     u841:
  2614  00095E  EF8D  F003         	goto	l1590
  2615  000962                     u840:
  2616  000962  0012               	return		;funcret
  2617  000964                     __end_of_pontua:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function ___llmod *****************
  2621 ;; Defined at:
  2622 ;;		line 7 in file "C:\Program Files (x86)\pic\sources\c99\common\llmod.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  dividend        4   13[COMRAM] unsigned long 
  2625 ;;  divisor         4   17[COMRAM] unsigned long 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  counter         1   21[COMRAM] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  4   13[COMRAM] unsigned long 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2637 ;;      Params:         8       0       0       0       0       0       0
  2638 ;;      Locals:         1       0       0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0
  2640 ;;      Totals:         9       0       0       0       0       0       0
  2641 ;;Total ram usage:        9 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_pontua
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text9
  2651  00119E                     __ptext9:
  2652                           	callstack 0
  2653  00119E                     ___llmod:
  2654                           	callstack 27
  2655  00119E  5012               	movf	___llmod@divisor^0,w,c
  2656  0011A0  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  2657  0011A2  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  2658  0011A4  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  2659  0011A6  B4D8               	btfsc	status,2,c
  2660  0011A8  EFD8  F008         	goto	u701
  2661  0011AC  EFDA  F008         	goto	u700
  2662  0011B0                     u701:
  2663  0011B0  EF0A  F009         	goto	l599
  2664  0011B4                     u700:
  2665  0011B4  0E01               	movlw	1
  2666  0011B6  6E16               	movwf	___llmod@counter^0,c
  2667  0011B8  EFE4  F008         	goto	l1522
  2668  0011BC                     l1520:
  2669  0011BC  90D8               	bcf	status,0,c
  2670  0011BE  3612               	rlcf	___llmod@divisor^0,f,c
  2671  0011C0  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  2672  0011C2  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  2673  0011C4  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  2674  0011C6  2A16               	incf	___llmod@counter^0,f,c
  2675  0011C8                     l1522:
  2676  0011C8  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  2677  0011CA  EFE9  F008         	goto	u711
  2678  0011CE  EFEB  F008         	goto	u710
  2679  0011D2                     u711:
  2680  0011D2  EFDE  F008         	goto	l1520
  2681  0011D6                     u710:
  2682  0011D6                     l1524:
  2683  0011D6  5012               	movf	___llmod@divisor^0,w,c
  2684  0011D8  5C0E               	subwf	___llmod@dividend^0,w,c
  2685  0011DA  5013               	movf	(___llmod@divisor+1)^0,w,c
  2686  0011DC  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  2687  0011DE  5014               	movf	(___llmod@divisor+2)^0,w,c
  2688  0011E0  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  2689  0011E2  5015               	movf	(___llmod@divisor+3)^0,w,c
  2690  0011E4  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  2691  0011E6  A0D8               	btfss	status,0,c
  2692  0011E8  EFF8  F008         	goto	u721
  2693  0011EC  EFFA  F008         	goto	u720
  2694  0011F0                     u721:
  2695  0011F0  EF02  F009         	goto	l1528
  2696  0011F4                     u720:
  2697  0011F4  5012               	movf	___llmod@divisor^0,w,c
  2698  0011F6  5E0E               	subwf	___llmod@dividend^0,f,c
  2699  0011F8  5013               	movf	(___llmod@divisor+1)^0,w,c
  2700  0011FA  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  2701  0011FC  5014               	movf	(___llmod@divisor+2)^0,w,c
  2702  0011FE  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  2703  001200  5015               	movf	(___llmod@divisor+3)^0,w,c
  2704  001202  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  2705  001204                     l1528:
  2706  001204  90D8               	bcf	status,0,c
  2707  001206  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  2708  001208  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  2709  00120A  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  2710  00120C  3212               	rrcf	___llmod@divisor^0,f,c
  2711  00120E  2E16               	decfsz	___llmod@counter^0,f,c
  2712  001210  EFEB  F008         	goto	l1524
  2713  001214                     l599:
  2714  001214  C00E  F00E         	movff	___llmod@dividend,?___llmod
  2715  001218  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  2716  00121C  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  2717  001220  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  2718  001224  0012               	return		;funcret
  2719  001226                     __end_of___llmod:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function ___lldiv *****************
  2723 ;; Defined at:
  2724 ;;		line 7 in file "C:\Program Files (x86)\pic\sources\c99\common\__lldiv.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  dividend        4    0[COMRAM] unsigned long 
  2727 ;;  divisor         4    4[COMRAM] unsigned long 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  quotient        4    8[COMRAM] unsigned long 
  2730 ;;  counter         1   12[COMRAM] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  4    0[COMRAM] unsigned long 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2740 ;;      Params:         8       0       0       0       0       0       0
  2741 ;;      Locals:         5       0       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0
  2743 ;;      Totals:        13       0       0       0       0       0       0
  2744 ;;Total ram usage:       13 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_pontua
  2750 ;;		_pontFinal
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text10
  2755  0010FA                     __ptext10:
  2756                           	callstack 0
  2757  0010FA                     ___lldiv:
  2758                           	callstack 28
  2759  0010FA  0E00               	movlw	0
  2760  0010FC  6E09               	movwf	___lldiv@quotient^0,c
  2761  0010FE  0E00               	movlw	0
  2762  001100  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  2763  001102  0E00               	movlw	0
  2764  001104  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  2765  001106  0E00               	movlw	0
  2766  001108  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  2767  00110A  5005               	movf	___lldiv@divisor^0,w,c
  2768  00110C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  2769  00110E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  2770  001110  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  2771  001112  B4D8               	btfsc	status,2,c
  2772  001114  EF8E  F008         	goto	u671
  2773  001118  EF90  F008         	goto	u670
  2774  00111C                     u671:
  2775  00111C  EFC6  F008         	goto	l206
  2776  001120                     u670:
  2777  001120  0E01               	movlw	1
  2778  001122  6E0D               	movwf	___lldiv@counter^0,c
  2779  001124  EF9A  F008         	goto	l1502
  2780  001128                     l1500:
  2781  001128  90D8               	bcf	status,0,c
  2782  00112A  3605               	rlcf	___lldiv@divisor^0,f,c
  2783  00112C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  2784  00112E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  2785  001130  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  2786  001132  2A0D               	incf	___lldiv@counter^0,f,c
  2787  001134                     l1502:
  2788  001134  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  2789  001136  EF9F  F008         	goto	u681
  2790  00113A  EFA1  F008         	goto	u680
  2791  00113E                     u681:
  2792  00113E  EF94  F008         	goto	l1500
  2793  001142                     u680:
  2794  001142                     l1504:
  2795  001142  90D8               	bcf	status,0,c
  2796  001144  3609               	rlcf	___lldiv@quotient^0,f,c
  2797  001146  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  2798  001148  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  2799  00114A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  2800  00114C  5005               	movf	___lldiv@divisor^0,w,c
  2801  00114E  5C01               	subwf	___lldiv@dividend^0,w,c
  2802  001150  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2803  001152  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  2804  001154  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2805  001156  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  2806  001158  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2807  00115A  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  2808  00115C  A0D8               	btfss	status,0,c
  2809  00115E  EFB3  F008         	goto	u691
  2810  001162  EFB5  F008         	goto	u690
  2811  001166                     u691:
  2812  001166  EFBE  F008         	goto	l1512
  2813  00116A                     u690:
  2814  00116A  5005               	movf	___lldiv@divisor^0,w,c
  2815  00116C  5E01               	subwf	___lldiv@dividend^0,f,c
  2816  00116E  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2817  001170  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  2818  001172  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2819  001174  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  2820  001176  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2821  001178  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  2822  00117A  8009               	bsf	___lldiv@quotient^0,0,c
  2823  00117C                     l1512:
  2824  00117C  90D8               	bcf	status,0,c
  2825  00117E  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  2826  001180  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  2827  001182  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  2828  001184  3205               	rrcf	___lldiv@divisor^0,f,c
  2829  001186  2E0D               	decfsz	___lldiv@counter^0,f,c
  2830  001188  EFA1  F008         	goto	l1504
  2831  00118C                     l206:
  2832  00118C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2833  001190  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2834  001194  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2835  001198  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2836  00119C  0012               	return		;funcret
  2837  00119E                     __end_of___lldiv:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _msgInicio *****************
  2841 ;; Defined at:
  2842 ;;		line 133 in file "main.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2856 ;;      Params:         0       0       0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    3
  2863 ;; This function calls:
  2864 ;;		_atraso_ms
  2865 ;;		_lcd_cmd
  2866 ;;		_lcd_str
  2867 ;; This function is called by:
  2868 ;;		_musica
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text11
  2873  00151A                     __ptext11:
  2874                           	callstack 0
  2875  00151A                     _msgInicio:
  2876                           	callstack 25
  2877  00151A                     
  2878                           ;main.c: 134:     lcd_cmd(0x01);
  2879  00151A  0E01               	movlw	1
  2880  00151C  ECE3  F00A         	call	_lcd_cmd
  2881                           
  2882                           ;main.c: 135:     lcd_cmd(0x90);
  2883  001520  0E90               	movlw	144
  2884  001522  ECE3  F00A         	call	_lcd_cmd
  2885  001526                     
  2886                           ;main.c: 136:     lcd_str("  PRONTO");
  2887  001526  0ED7               	movlw	low STR_8
  2888  001528  6E08               	movwf	lcd_str@str^0,c
  2889  00152A  0E06               	movlw	high STR_8
  2890  00152C  6E09               	movwf	(lcd_str@str+1)^0,c
  2891  00152E  EC13  F009         	call	_lcd_str	;wreg free
  2892  001532                     
  2893                           ;main.c: 137:     lcd_cmd(0xD0);
  2894  001532  0ED0               	movlw	208
  2895  001534  ECE3  F00A         	call	_lcd_cmd
  2896  001538                     
  2897                           ;main.c: 138:     atraso_ms(500);
  2898  001538  0E01               	movlw	1
  2899  00153A  6E02               	movwf	(atraso_ms@t+1)^0,c
  2900  00153C  0EF4               	movlw	244
  2901  00153E  6E01               	movwf	atraso_ms@t^0,c
  2902  001540  EC2D  F00A         	call	_atraso_ms	;wreg free
  2903  001544                     
  2904                           ;main.c: 139:     lcd_cmd(0x01);
  2905  001544  0E01               	movlw	1
  2906  001546  ECE3  F00A         	call	_lcd_cmd
  2907                           
  2908                           ;main.c: 140:     lcd_str("   VAlENDO!!!");
  2909  00154A  0E47               	movlw	low STR_9
  2910  00154C  6E08               	movwf	lcd_str@str^0,c
  2911  00154E  0E06               	movlw	high STR_9
  2912  001550  6E09               	movwf	(lcd_str@str+1)^0,c
  2913  001552  EC13  F009         	call	_lcd_str	;wreg free
  2914  001556                     
  2915                           ;main.c: 141:     atraso_ms(750);
  2916  001556  0E02               	movlw	2
  2917  001558  6E02               	movwf	(atraso_ms@t+1)^0,c
  2918  00155A  0EEE               	movlw	238
  2919  00155C  6E01               	movwf	atraso_ms@t^0,c
  2920  00155E  EC2D  F00A         	call	_atraso_ms	;wreg free
  2921  001562                     
  2922                           ;main.c: 142:     lcd_cmd(0x01);
  2923  001562  0E01               	movlw	1
  2924  001564  ECE3  F00A         	call	_lcd_cmd
  2925  001568  0012               	return		;funcret
  2926  00156A                     __end_of_msgInicio:
  2927                           	callstack 0
  2928                           
  2929 ;; *************** function _msgDisplay *****************
  2930 ;; Defined at:
  2931 ;;		line 81 in file "main.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  op              2   12[COMRAM] int 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  i               1   14[COMRAM] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2945 ;;      Params:         2       0       0       0       0       0       0
  2946 ;;      Locals:         1       0       0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0
  2948 ;;      Totals:         3       0       0       0       0       0       0
  2949 ;;Total ram usage:        3 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    3
  2952 ;; This function calls:
  2953 ;;		_atraso_ms
  2954 ;;		_lcd_cmd
  2955 ;;		_lcd_str
  2956 ;; This function is called by:
  2957 ;;		_musica
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text12
  2962  000F44                     __ptext12:
  2963                           	callstack 0
  2964  000F44                     _msgDisplay:
  2965                           	callstack 25
  2966  000F44                     
  2967                           ;main.c: 82:     (*(volatile __near unsigned char*)0xF84) = 0;
  2968  000F44  0E00               	movlw	0
  2969  000F46  6E84               	movwf	132,c	;volatile
  2970  000F48                     
  2971                           ;main.c: 83:     unsigned char i;;main.c: 84:     lcd_cmd(0x01);
  2972  000F48  0E01               	movlw	1
  2973  000F4A  ECE3  F00A         	call	_lcd_cmd
  2974  000F4E                     
  2975                           ;main.c: 85:     lcd_cmd(0x80);
  2976  000F4E  0E80               	movlw	128
  2977  000F50  ECE3  F00A         	call	_lcd_cmd
  2978  000F54                     
  2979                           ;main.c: 86:     if(op == 1){
  2980  000F54  040D               	decf	msgDisplay@op^0,w,c
  2981  000F56  100E               	iorwf	(msgDisplay@op+1)^0,w,c
  2982  000F58  A4D8               	btfss	status,2,c
  2983  000F5A  EFB1  F007         	goto	u851
  2984  000F5E  EFB3  F007         	goto	u850
  2985  000F62                     u851:
  2986  000F62  EFBB  F007         	goto	l1660
  2987  000F66                     u850:
  2988  000F66                     
  2989                           ;main.c: 87:         lcd_str("    JULIETA");
  2990  000F66  0E8C               	movlw	low STR_1
  2991  000F68  6E08               	movwf	lcd_str@str^0,c
  2992  000F6A  0E06               	movlw	high STR_1
  2993  000F6C  6E09               	movwf	(lcd_str@str+1)^0,c
  2994  000F6E  EC13  F009         	call	_lcd_str	;wreg free
  2995                           
  2996                           ;main.c: 88:     }else{
  2997  000F72  EFC1  F007         	goto	l1662
  2998  000F76                     l1660:
  2999                           
  3000                           ;main.c: 89:         lcd_str("     MOZART");
  3001  000F76  0E98               	movlw	low STR_2
  3002  000F78  6E08               	movwf	lcd_str@str^0,c
  3003  000F7A  0E06               	movlw	high STR_2
  3004  000F7C  6E09               	movwf	(lcd_str@str+1)^0,c
  3005  000F7E  EC13  F009         	call	_lcd_str	;wreg free
  3006  000F82                     l1662:
  3007                           
  3008                           ;main.c: 91:     atraso_ms(atrasoMax);
  3009  000F82  0E03               	movlw	3
  3010  000F84  6E02               	movwf	(atraso_ms@t+1)^0,c
  3011  000F86  0EE8               	movlw	232
  3012  000F88  6E01               	movwf	atraso_ms@t^0,c
  3013  000F8A  EC2D  F00A         	call	_atraso_ms	;wreg free
  3014  000F8E                     
  3015                           ;main.c: 92:     lcd_cmd(0xD0);
  3016  000F8E  0ED0               	movlw	208
  3017  000F90  ECE3  F00A         	call	_lcd_cmd
  3018                           
  3019                           ;main.c: 93:     lcd_str("----------------");
  3020  000F94  0E16               	movlw	low STR_3
  3021  000F96  6E08               	movwf	lcd_str@str^0,c
  3022  000F98  0E06               	movlw	high STR_3
  3023  000F9A  6E09               	movwf	(lcd_str@str+1)^0,c
  3024  000F9C  EC13  F009         	call	_lcd_str	;wreg free
  3025  000FA0                     
  3026                           ;main.c: 96:     for (i = 0; i < 4; i++) {
  3027  000FA0  0E00               	movlw	0
  3028  000FA2  6E0F               	movwf	msgDisplay@i^0,c
  3029  000FA4                     l1672:
  3030                           
  3031                           ;main.c: 97:         atraso_ms(atrasoMed);
  3032  000FA4  0E00               	movlw	0
  3033  000FA6  6E02               	movwf	(atraso_ms@t+1)^0,c
  3034  000FA8  0E96               	movlw	150
  3035  000FAA  6E01               	movwf	atraso_ms@t^0,c
  3036  000FAC  EC2D  F00A         	call	_atraso_ms	;wreg free
  3037                           
  3038                           ;main.c: 98:         lcd_cmd(0x18);
  3039  000FB0  0E18               	movlw	24
  3040  000FB2  ECE3  F00A         	call	_lcd_cmd
  3041  000FB6                     
  3042                           ;main.c: 99:     }
  3043  000FB6  2A0F               	incf	msgDisplay@i^0,f,c
  3044  000FB8  0E03               	movlw	3
  3045  000FBA  640F               	cpfsgt	msgDisplay@i^0,c
  3046  000FBC  EFE2  F007         	goto	u861
  3047  000FC0  EFE4  F007         	goto	u860
  3048  000FC4                     u861:
  3049  000FC4  EFD2  F007         	goto	l1672
  3050  000FC8                     u860:
  3051  000FC8                     
  3052                           ;main.c: 101:     for (i = 0; i < 4; i++) {
  3053  000FC8  0E00               	movlw	0
  3054  000FCA  6E0F               	movwf	msgDisplay@i^0,c
  3055  000FCC                     l1684:
  3056                           
  3057                           ;main.c: 102:         atraso_ms(atrasoMed);
  3058  000FCC  0E00               	movlw	0
  3059  000FCE  6E02               	movwf	(atraso_ms@t+1)^0,c
  3060  000FD0  0E96               	movlw	150
  3061  000FD2  6E01               	movwf	atraso_ms@t^0,c
  3062  000FD4  EC2D  F00A         	call	_atraso_ms	;wreg free
  3063                           
  3064                           ;main.c: 103:         lcd_cmd(0x1C);
  3065  000FD8  0E1C               	movlw	28
  3066  000FDA  ECE3  F00A         	call	_lcd_cmd
  3067  000FDE                     
  3068                           ;main.c: 104:     }
  3069  000FDE  2A0F               	incf	msgDisplay@i^0,f,c
  3070  000FE0  0E03               	movlw	3
  3071  000FE2  640F               	cpfsgt	msgDisplay@i^0,c
  3072  000FE4  EFF6  F007         	goto	u871
  3073  000FE8  EFF8  F007         	goto	u870
  3074  000FEC                     u871:
  3075  000FEC  EFE6  F007         	goto	l1684
  3076  000FF0                     u870:
  3077  000FF0                     
  3078                           ;main.c: 106:     for (i = 0; i < 4; i++) {
  3079  000FF0  0E00               	movlw	0
  3080  000FF2  6E0F               	movwf	msgDisplay@i^0,c
  3081  000FF4                     l1696:
  3082                           
  3083                           ;main.c: 107:         atraso_ms(atrasoMed);
  3084  000FF4  0E00               	movlw	0
  3085  000FF6  6E02               	movwf	(atraso_ms@t+1)^0,c
  3086  000FF8  0E96               	movlw	150
  3087  000FFA  6E01               	movwf	atraso_ms@t^0,c
  3088  000FFC  EC2D  F00A         	call	_atraso_ms	;wreg free
  3089                           
  3090                           ;main.c: 108:         lcd_cmd(0x18);
  3091  001000  0E18               	movlw	24
  3092  001002  ECE3  F00A         	call	_lcd_cmd
  3093  001006                     
  3094                           ;main.c: 109:     }
  3095  001006  2A0F               	incf	msgDisplay@i^0,f,c
  3096  001008  0E03               	movlw	3
  3097  00100A  640F               	cpfsgt	msgDisplay@i^0,c
  3098  00100C  EF0A  F008         	goto	u881
  3099  001010  EF0C  F008         	goto	u880
  3100  001014                     u881:
  3101  001014  EFFA  F007         	goto	l1696
  3102  001018                     u880:
  3103  001018                     
  3104                           ;main.c: 110:     atraso_ms(atrasoMax);
  3105  001018  0E03               	movlw	3
  3106  00101A  6E02               	movwf	(atraso_ms@t+1)^0,c
  3107  00101C  0EE8               	movlw	232
  3108  00101E  6E01               	movwf	atraso_ms@t^0,c
  3109  001020  EC2D  F00A         	call	_atraso_ms	;wreg free
  3110  001024  0012               	return		;funcret
  3111  001026                     __end_of_msgDisplay:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function _buzzer *****************
  3115 ;; Defined at:
  3116 ;;		line 114 in file "main.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  op              2   12[COMRAM] int 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3130 ;;      Params:         2       0       0       0       0       0       0
  3131 ;;      Locals:         0       0       0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0
  3133 ;;      Totals:         2       0       0       0       0       0       0
  3134 ;;Total ram usage:        2 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    3
  3137 ;; This function calls:
  3138 ;;		_atraso_ms
  3139 ;;		_lcd_cmd
  3140 ;;		_lcd_str
  3141 ;; This function is called by:
  3142 ;;		_musica
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text13
  3147  001384                     __ptext13:
  3148                           	callstack 0
  3149  001384                     _buzzer:
  3150                           	callstack 25
  3151  001384                     
  3152                           ;main.c: 115:     lcd_cmd(0x01);
  3153  001384  0E01               	movlw	1
  3154  001386  ECE3  F00A         	call	_lcd_cmd
  3155                           
  3156                           ;main.c: 116:     lcd_cmd(0x90);
  3157  00138A  0E90               	movlw	144
  3158  00138C  ECE3  F00A         	call	_lcd_cmd
  3159  001390                     
  3160                           ;main.c: 117:     lcd_str("   BUZZER");
  3161  001390  0ECD               	movlw	low STR_4
  3162  001392  6E08               	movwf	lcd_str@str^0,c
  3163  001394  0E06               	movlw	high STR_4
  3164  001396  6E09               	movwf	(lcd_str@str+1)^0,c
  3165  001398  EC13  F009         	call	_lcd_str	;wreg free
  3166  00139C                     
  3167                           ;main.c: 119:     atraso_ms(1000);
  3168  00139C  0E03               	movlw	3
  3169  00139E  6E02               	movwf	(atraso_ms@t+1)^0,c
  3170  0013A0  0EE8               	movlw	232
  3171  0013A2  6E01               	movwf	atraso_ms@t^0,c
  3172  0013A4  EC2D  F00A         	call	_atraso_ms	;wreg free
  3173  0013A8                     
  3174                           ;main.c: 120:     lcd_cmd(0x01);
  3175  0013A8  0E01               	movlw	1
  3176  0013AA  ECE3  F00A         	call	_lcd_cmd
  3177  0013AE                     
  3178                           ;main.c: 121:     lcd_cmd(0xC0);
  3179  0013AE  0EC0               	movlw	192
  3180  0013B0  ECE3  F00A         	call	_lcd_cmd
  3181                           
  3182                           ;main.c: 122:     lcd_str("TOCANDO: ");
  3183  0013B4  0EAF               	movlw	low STR_5
  3184  0013B6  6E08               	movwf	lcd_str@str^0,c
  3185  0013B8  0E06               	movlw	high STR_5
  3186  0013BA  6E09               	movwf	(lcd_str@str+1)^0,c
  3187  0013BC  EC13  F009         	call	_lcd_str	;wreg free
  3188  0013C0                     
  3189                           ;main.c: 123:     lcd_cmd(0x90);
  3190  0013C0  0E90               	movlw	144
  3191  0013C2  ECE3  F00A         	call	_lcd_cmd
  3192  0013C6                     
  3193                           ;main.c: 124:     if(op == 1){
  3194  0013C6  040D               	decf	buzzer@op^0,w,c
  3195  0013C8  100E               	iorwf	(buzzer@op+1)^0,w,c
  3196  0013CA  A4D8               	btfss	status,2,c
  3197  0013CC  EFEA  F009         	goto	u891
  3198  0013D0  EFEC  F009         	goto	u890
  3199  0013D4                     u891:
  3200  0013D4  EFF4  F009         	goto	l1720
  3201  0013D8                     u890:
  3202  0013D8                     
  3203                           ;main.c: 125:         lcd_str("  JULIETA");
  3204  0013D8  0E8E               	movlw	low (STR_1+2)
  3205  0013DA  6E08               	movwf	lcd_str@str^0,c
  3206  0013DC  0E06               	movlw	high (STR_1+2)
  3207  0013DE  6E09               	movwf	(lcd_str@str+1)^0,c
  3208  0013E0  EC13  F009         	call	_lcd_str	;wreg free
  3209                           
  3210                           ;main.c: 127:     }else{
  3211  0013E4  EFFA  F009         	goto	l60
  3212  0013E8                     l1720:
  3213                           
  3214                           ;main.c: 128:         lcd_str("  MOZART");
  3215  0013E8  0E9B               	movlw	low (STR_2+3)
  3216  0013EA  6E08               	movwf	lcd_str@str^0,c
  3217  0013EC  0E06               	movlw	high (STR_2+3)
  3218  0013EE  6E09               	movwf	(lcd_str@str+1)^0,c
  3219  0013F0  EC13  F009         	call	_lcd_str	;wreg free
  3220  0013F4                     l60:
  3221  0013F4  0012               	return		;funcret
  3222  0013F6                     __end_of_buzzer:
  3223                           	callstack 0
  3224                           
  3225 ;; *************** function _lcd_str *****************
  3226 ;; Defined at:
  3227 ;;		line 47 in file "lcd.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  str             2    7[COMRAM] PTR const unsigned char 
  3230 ;;		 -> STR_24(15), STR_23(17), STR_22(13), STR_21(14), 
  3231 ;;		 -> STR_20(17), STR_19(14), STR_18(17), STR_17(11), 
  3232 ;;		 -> STR_16(9), STR_15(10), STR_14(10), STR_13(4), 
  3233 ;;		 -> STR_12(10), STR_11(10), STR_10(14), pontFinal@valor(6), 
  3234 ;;		 -> STR_9(14), STR_8(9), STR_7(9), STR_6(10), 
  3235 ;;		 -> STR_5(10), STR_4(10), STR_3(17), STR_2(12), 
  3236 ;;		 -> STR_1(12), 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  i               1   11[COMRAM] unsigned char 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3248 ;;      Params:         2       0       0       0       0       0       0
  3249 ;;      Locals:         1       0       0       0       0       0       0
  3250 ;;      Temps:          2       0       0       0       0       0       0
  3251 ;;      Totals:         5       0       0       0       0       0       0
  3252 ;;Total ram usage:        5 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    2
  3255 ;; This function calls:
  3256 ;;		_lcd_dat
  3257 ;; This function is called by:
  3258 ;;		_msgDisplay
  3259 ;;		_buzzer
  3260 ;;		_msgInicio
  3261 ;;		_pontFinal
  3262 ;;		_musica
  3263 ;;		_menu
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text14
  3268  001226                     __ptext14:
  3269                           	callstack 0
  3270  001226                     _lcd_str:
  3271                           	callstack 26
  3272  001226                     
  3273                           ;lcd.c: 48:     unsigned char i = 0;
  3274  001226  0E00               	movlw	0
  3275  001228  6E0C               	movwf	lcd_str@i^0,c
  3276                           
  3277                           ;lcd.c: 50:     while (str[i] != 0) {
  3278  00122A  EF30  F009         	goto	l1492
  3279  00122E                     l1488:
  3280                           
  3281                           ;lcd.c: 51:         lcd_dat(str[i]);
  3282  00122E  500C               	movf	lcd_str@i^0,w,c
  3283  001230  2408               	addwf	lcd_str@str^0,w,c
  3284  001232  6E0A               	movwf	??_lcd_str^0,c
  3285  001234  0E00               	movlw	0
  3286  001236  2009               	addwfc	(lcd_str@str+1)^0,w,c
  3287  001238  6E0B               	movwf	(??_lcd_str+1)^0,c
  3288  00123A  C00A  FFF6         	movff	??_lcd_str,tblptrl
  3289  00123E  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  3290  001242  6AF8               	clrf	tblptru,c
  3291  001244  0E05               	movlw	(high __ramtop+-1)
  3292  001246  64F7               	cpfsgt	tblptrh,c
  3293  001248  D003               	bra	u647
  3294  00124A  0008               	tblrd		*
  3295  00124C  50F5               	movf	tablat,w,c
  3296  00124E  D005               	bra	u640
  3297  001250                     u647:
  3298  001250  CFF6 FFE9          	movff	tblptrl,fsr0l
  3299  001254  CFF7 FFEA          	movff	tblptrh,fsr0h
  3300  001258  50EF               	movf	indf0,w,c
  3301  00125A                     u640:
  3302  00125A  ECCE  F00A         	call	_lcd_dat
  3303  00125E                     
  3304                           ;lcd.c: 52:         i++;
  3305  00125E  2A0C               	incf	lcd_str@i^0,f,c
  3306  001260                     l1492:
  3307                           
  3308                           ;lcd.c: 50:     while (str[i] != 0) {
  3309  001260  500C               	movf	lcd_str@i^0,w,c
  3310  001262  2408               	addwf	lcd_str@str^0,w,c
  3311  001264  6E0A               	movwf	??_lcd_str^0,c
  3312  001266  0E00               	movlw	0
  3313  001268  2009               	addwfc	(lcd_str@str+1)^0,w,c
  3314  00126A  6E0B               	movwf	(??_lcd_str+1)^0,c
  3315  00126C  C00A  FFF6         	movff	??_lcd_str,tblptrl
  3316  001270  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  3317  001274  6AF8               	clrf	tblptru,c
  3318  001276  0E05               	movlw	(high __ramtop+-1)
  3319  001278  64F7               	cpfsgt	tblptrh,c
  3320  00127A  D003               	bra	u657
  3321  00127C  0008               	tblrd		*
  3322  00127E  50F5               	movf	tablat,w,c
  3323  001280  D005               	bra	u650
  3324  001282                     u657:
  3325  001282  CFF6 FFE9          	movff	tblptrl,fsr0l
  3326  001286  CFF7 FFEA          	movff	tblptrh,fsr0h
  3327  00128A  50EF               	movf	indf0,w,c
  3328  00128C                     u650:
  3329  00128C  0900               	iorlw	0
  3330  00128E  A4D8               	btfss	status,2,c
  3331  001290  EF4C  F009         	goto	u661
  3332  001294  EF4E  F009         	goto	u660
  3333  001298                     u661:
  3334  001298  EF17  F009         	goto	l1488
  3335  00129C                     u660:
  3336  00129C  0012               	return		;funcret
  3337  00129E                     __end_of_lcd_str:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _lcd_dat *****************
  3341 ;; Defined at:
  3342 ;;		line 19 in file "lcd.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  val             1    wreg     unsigned char 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  val             1    6[COMRAM] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3356 ;;      Params:         0       0       0       0       0       0       0
  3357 ;;      Locals:         1       0       0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0
  3359 ;;      Totals:         1       0       0       0       0       0       0
  3360 ;;Total ram usage:        1 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    1
  3363 ;; This function calls:
  3364 ;;		_atraso_ms
  3365 ;;		_lcd_wr
  3366 ;; This function is called by:
  3367 ;;		_menu
  3368 ;;		_lcd_str
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text15
  3373  00159C                     __ptext15:
  3374                           	callstack 0
  3375  00159C                     _lcd_dat:
  3376                           	callstack 26
  3377                           
  3378                           ;incstack = 0
  3379                           ;lcd_dat@val stored from wreg
  3380  00159C  6E07               	movwf	lcd_dat@val^0,c
  3381  00159E                     
  3382                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3383  00159E  8284               	bsf	132,1,c	;volatile
  3384  0015A0                     
  3385                           ;lcd.c: 21:     lcd_wr(val);
  3386  0015A0  5007               	movf	lcd_dat@val^0,w,c
  3387  0015A2  EC1A  F00B         	call	_lcd_wr
  3388  0015A6                     
  3389                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
  3390  0015A6  8484               	bsf	132,2,c	;volatile
  3391  0015A8                     
  3392                           ;lcd.c: 23:     atraso_ms(3);
  3393  0015A8  0E00               	movlw	0
  3394  0015AA  6E02               	movwf	(atraso_ms@t+1)^0,c
  3395  0015AC  0E03               	movlw	3
  3396  0015AE  6E01               	movwf	atraso_ms@t^0,c
  3397  0015B0  EC2D  F00A         	call	_atraso_ms	;wreg free
  3398  0015B4                     
  3399                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3400  0015B4  9284               	bcf	132,1,c	;volatile
  3401  0015B6                     
  3402                           ;lcd.c: 25:     atraso_ms(3);
  3403  0015B6  0E00               	movlw	0
  3404  0015B8  6E02               	movwf	(atraso_ms@t+1)^0,c
  3405  0015BA  0E03               	movlw	3
  3406  0015BC  6E01               	movwf	atraso_ms@t^0,c
  3407  0015BE  EC2D  F00A         	call	_atraso_ms	;wreg free
  3408  0015C2                     
  3409                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3410  0015C2  8284               	bsf	132,1,c	;volatile
  3411  0015C4  0012               	return		;funcret
  3412  0015C6                     __end_of_lcd_dat:
  3413                           	callstack 0
  3414                           
  3415 ;; *************** function _lcd_init *****************
  3416 ;; Defined at:
  3417 ;;		line 29 in file "lcd.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;		None
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;		None
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3431 ;;      Params:         0       0       0       0       0       0       0
  3432 ;;      Locals:         0       0       0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0
  3434 ;;      Totals:         0       0       0       0       0       0       0
  3435 ;;Total ram usage:        0 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    2
  3438 ;; This function calls:
  3439 ;;		_atraso_ms
  3440 ;;		_lcd_cmd
  3441 ;; This function is called by:
  3442 ;;		_menu
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text16
  3447  0014BE                     __ptext16:
  3448                           	callstack 0
  3449  0014BE                     _lcd_init:
  3450                           	callstack 27
  3451  0014BE                     
  3452                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3453  0014BE  9284               	bcf	132,1,c	;volatile
  3454                           
  3455                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  3456  0014C0  9484               	bcf	132,2,c	;volatile
  3457  0014C2                     
  3458                           ;lcd.c: 32:     atraso_ms(20);
  3459  0014C2  0E00               	movlw	0
  3460  0014C4  6E02               	movwf	(atraso_ms@t+1)^0,c
  3461  0014C6  0E14               	movlw	20
  3462  0014C8  6E01               	movwf	atraso_ms@t^0,c
  3463  0014CA  EC2D  F00A         	call	_atraso_ms	;wreg free
  3464  0014CE                     
  3465                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3466  0014CE  8284               	bsf	132,1,c	;volatile
  3467                           
  3468                           ;lcd.c: 35:     lcd_cmd(0x38);
  3469  0014D0  0E38               	movlw	56
  3470  0014D2  ECE3  F00A         	call	_lcd_cmd
  3471                           
  3472                           ;lcd.c: 36:     atraso_ms(5);
  3473  0014D6  0E00               	movlw	0
  3474  0014D8  6E02               	movwf	(atraso_ms@t+1)^0,c
  3475  0014DA  0E05               	movlw	5
  3476  0014DC  6E01               	movwf	atraso_ms@t^0,c
  3477  0014DE  EC2D  F00A         	call	_atraso_ms	;wreg free
  3478                           
  3479                           ;lcd.c: 37:     lcd_cmd(0x38);
  3480  0014E2  0E38               	movlw	56
  3481  0014E4  ECE3  F00A         	call	_lcd_cmd
  3482                           
  3483                           ;lcd.c: 38:     atraso_ms(1);
  3484  0014E8  0E00               	movlw	0
  3485  0014EA  6E02               	movwf	(atraso_ms@t+1)^0,c
  3486  0014EC  0E01               	movlw	1
  3487  0014EE  6E01               	movwf	atraso_ms@t^0,c
  3488  0014F0  EC2D  F00A         	call	_atraso_ms	;wreg free
  3489                           
  3490                           ;lcd.c: 39:     lcd_cmd(0x38);
  3491  0014F4  0E38               	movlw	56
  3492  0014F6  ECE3  F00A         	call	_lcd_cmd
  3493                           
  3494                           ;lcd.c: 40:     lcd_cmd(0x08);
  3495  0014FA  0E08               	movlw	8
  3496  0014FC  ECE3  F00A         	call	_lcd_cmd
  3497                           
  3498                           ;lcd.c: 41:     lcd_cmd(0x0F);
  3499  001500  0E0F               	movlw	15
  3500  001502  ECE3  F00A         	call	_lcd_cmd
  3501                           
  3502                           ;lcd.c: 42:     lcd_cmd(0x01);
  3503  001506  0E01               	movlw	1
  3504  001508  ECE3  F00A         	call	_lcd_cmd
  3505                           
  3506                           ;lcd.c: 43:     lcd_cmd(0x38);
  3507  00150C  0E38               	movlw	56
  3508  00150E  ECE3  F00A         	call	_lcd_cmd
  3509                           
  3510                           ;lcd.c: 44:     lcd_cmd(0x80);
  3511  001512  0E80               	movlw	128
  3512  001514  ECE3  F00A         	call	_lcd_cmd
  3513  001518  0012               	return		;funcret
  3514  00151A                     __end_of_lcd_init:
  3515                           	callstack 0
  3516                           
  3517 ;; *************** function _lcd_cmd *****************
  3518 ;; Defined at:
  3519 ;;		line 9 in file "lcd.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  val             1    wreg     unsigned char 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  val             1    6[COMRAM] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3533 ;;      Params:         0       0       0       0       0       0       0
  3534 ;;      Locals:         1       0       0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0
  3536 ;;      Totals:         1       0       0       0       0       0       0
  3537 ;;Total ram usage:        1 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    1
  3540 ;; This function calls:
  3541 ;;		_atraso_ms
  3542 ;;		_lcd_wr
  3543 ;; This function is called by:
  3544 ;;		_msgDisplay
  3545 ;;		_buzzer
  3546 ;;		_msgInicio
  3547 ;;		_pontFinal
  3548 ;;		_musica
  3549 ;;		_menu
  3550 ;;		_lcd_init
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text17
  3555  0015C6                     __ptext17:
  3556                           	callstack 0
  3557  0015C6                     _lcd_cmd:
  3558                           	callstack 27
  3559                           
  3560                           ;incstack = 0
  3561                           ;lcd_cmd@val stored from wreg
  3562  0015C6  6E07               	movwf	lcd_cmd@val^0,c
  3563  0015C8                     
  3564                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3565  0015C8  8284               	bsf	132,1,c	;volatile
  3566  0015CA                     
  3567                           ;lcd.c: 11:     lcd_wr(val);
  3568  0015CA  5007               	movf	lcd_cmd@val^0,w,c
  3569  0015CC  EC1A  F00B         	call	_lcd_wr
  3570  0015D0                     
  3571                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  3572  0015D0  9484               	bcf	132,2,c	;volatile
  3573  0015D2                     
  3574                           ;lcd.c: 13:     atraso_ms(3);
  3575  0015D2  0E00               	movlw	0
  3576  0015D4  6E02               	movwf	(atraso_ms@t+1)^0,c
  3577  0015D6  0E03               	movlw	3
  3578  0015D8  6E01               	movwf	atraso_ms@t^0,c
  3579  0015DA  EC2D  F00A         	call	_atraso_ms	;wreg free
  3580  0015DE                     
  3581                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3582  0015DE  9284               	bcf	132,1,c	;volatile
  3583  0015E0                     
  3584                           ;lcd.c: 15:     atraso_ms(3);
  3585  0015E0  0E00               	movlw	0
  3586  0015E2  6E02               	movwf	(atraso_ms@t+1)^0,c
  3587  0015E4  0E03               	movlw	3
  3588  0015E6  6E01               	movwf	atraso_ms@t^0,c
  3589  0015E8  EC2D  F00A         	call	_atraso_ms	;wreg free
  3590  0015EC                     
  3591                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3592  0015EC  8284               	bsf	132,1,c	;volatile
  3593  0015EE  0012               	return		;funcret
  3594  0015F0                     __end_of_lcd_cmd:
  3595                           	callstack 0
  3596                           
  3597 ;; *************** function _lcd_wr *****************
  3598 ;; Defined at:
  3599 ;;		line 5 in file "lcd.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  val             1    wreg     unsigned char 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  val             1    0[COMRAM] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3613 ;;      Params:         0       0       0       0       0       0       0
  3614 ;;      Locals:         1       0       0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0
  3616 ;;      Totals:         1       0       0       0       0       0       0
  3617 ;;Total ram usage:        1 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_lcd_cmd
  3623 ;;		_lcd_dat
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text18
  3628  001634                     __ptext18:
  3629                           	callstack 0
  3630  001634                     _lcd_wr:
  3631                           	callstack 26
  3632                           
  3633                           ;incstack = 0
  3634                           ;lcd_wr@val stored from wreg
  3635  001634  6E01               	movwf	lcd_wr@val^0,c
  3636  001636                     
  3637                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
  3638  001636  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  3639  00163A  0012               	return		;funcret
  3640  00163C                     __end_of_lcd_wr:
  3641                           	callstack 0
  3642                           
  3643 ;; *************** function _atraso_ms *****************
  3644 ;; Defined at:
  3645 ;;		line 3 in file "delay.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  t               2    0[COMRAM] int 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  i               2    2[COMRAM] volatile unsigned int 
  3650 ;;  k               1    5[COMRAM] volatile unsigned char 
  3651 ;;  j               1    4[COMRAM] volatile unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3661 ;;      Params:         2       0       0       0       0       0       0
  3662 ;;      Locals:         4       0       0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0
  3664 ;;      Totals:         6       0       0       0       0       0       0
  3665 ;;Total ram usage:        6 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_msgDisplay
  3671 ;;		_buzzer
  3672 ;;		_msgInicio
  3673 ;;		_pontFinal
  3674 ;;		_musica
  3675 ;;		_menu
  3676 ;;		_lcd_cmd
  3677 ;;		_lcd_dat
  3678 ;;		_lcd_init
  3679 ;;		_tc_tecla
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text19
  3684  00145A                     __ptext19:
  3685                           	callstack 0
  3686  00145A                     _atraso_ms:
  3687                           	callstack 28
  3688  00145A                     
  3689                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
  3690  00145A  0E00               	movlw	0
  3691  00145C  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  3692  00145E  0E00               	movlw	0
  3693  001460  6E03               	movwf	atraso_ms@i^0,c	;volatile
  3694  001462  EF53  F00A         	goto	l1454
  3695  001466                     l1432:
  3696                           
  3697                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
  3698  001466  0E00               	movlw	0
  3699  001468  6E05               	movwf	atraso_ms@j^0,c	;volatile
  3700  00146A                     l1434:
  3701  00146A  0E28               	movlw	40
  3702  00146C  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  3703  00146E  EF3B  F00A         	goto	u611
  3704  001472  EF3D  F00A         	goto	u610
  3705  001476                     u611:
  3706  001476  EF3F  F00A         	goto	l1438
  3707  00147A                     u610:
  3708  00147A  EF51  F00A         	goto	l1452
  3709  00147E                     l1438:
  3710                           
  3711                           ;delay.c: 9:             for (k = 0; k < 3; k++);
  3712  00147E  0E00               	movlw	0
  3713  001480  6E06               	movwf	atraso_ms@k^0,c	;volatile
  3714  001482                     l1440:
  3715  001482  0E02               	movlw	2
  3716  001484  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  3717  001486  EF47  F00A         	goto	u621
  3718  00148A  EF49  F00A         	goto	u620
  3719  00148E                     u621:
  3720  00148E  EF4B  F00A         	goto	l1444
  3721  001492                     u620:
  3722  001492  EF4E  F00A         	goto	l1448
  3723  001496                     l1444:
  3724  001496  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  3725  001498  EF41  F00A         	goto	l1440
  3726  00149C                     l1448:
  3727                           
  3728                           ;delay.c: 10:         }
  3729  00149C  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  3730  00149E  EF35  F00A         	goto	l1434
  3731  0014A2                     l1452:
  3732                           
  3733                           ;delay.c: 11:     }
  3734  0014A2  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  3735  0014A4  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  3736  0014A6                     l1454:
  3737  0014A6  5001               	movf	atraso_ms@t^0,w,c
  3738  0014A8  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  3739  0014AA  5002               	movf	(atraso_ms@t+1)^0,w,c
  3740  0014AC  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  3741  0014AE  A0D8               	btfss	status,0,c
  3742  0014B0  EF5C  F00A         	goto	u631
  3743  0014B4  EF5E  F00A         	goto	u630
  3744  0014B8                     u631:
  3745  0014B8  EF33  F00A         	goto	l1432
  3746  0014BC                     u630:
  3747  0014BC  0012               	return		;funcret
  3748  0014BE                     __end_of_atraso_ms:
  3749                           	callstack 0
  3750                           
  3751                           	psect	rparam
  3752  0000                     
  3753                           	psect	idloc
  3754                           
  3755                           ;Config register IDLOC0 @ 0x200000
  3756                           ;	unspecified, using default values
  3757  200000                     	org	2097152
  3758  200000  FF                 	db	255
  3759                           
  3760                           ;Config register IDLOC1 @ 0x200001
  3761                           ;	unspecified, using default values
  3762  200001                     	org	2097153
  3763  200001  FF                 	db	255
  3764                           
  3765                           ;Config register IDLOC2 @ 0x200002
  3766                           ;	unspecified, using default values
  3767  200002                     	org	2097154
  3768  200002  FF                 	db	255
  3769                           
  3770                           ;Config register IDLOC3 @ 0x200003
  3771                           ;	unspecified, using default values
  3772  200003                     	org	2097155
  3773  200003  FF                 	db	255
  3774                           
  3775                           ;Config register IDLOC4 @ 0x200004
  3776                           ;	unspecified, using default values
  3777  200004                     	org	2097156
  3778  200004  FF                 	db	255
  3779                           
  3780                           ;Config register IDLOC5 @ 0x200005
  3781                           ;	unspecified, using default values
  3782  200005                     	org	2097157
  3783  200005  FF                 	db	255
  3784                           
  3785                           ;Config register IDLOC6 @ 0x200006
  3786                           ;	unspecified, using default values
  3787  200006                     	org	2097158
  3788  200006  FF                 	db	255
  3789                           
  3790                           ;Config register IDLOC7 @ 0x200007
  3791                           ;	unspecified, using default values
  3792  200007                     	org	2097159
  3793  200007  FF                 	db	255
  3794                           
  3795                           	psect	config
  3796                           
  3797                           ; Padding undefined space
  3798  300000                     	org	3145728
  3799  300000  FF                 	db	255
  3800                           
  3801                           ;Config register CONFIG1H @ 0x300001
  3802                           ;	Oscillator Selection bits
  3803                           ;	OSC = HS, HS oscillator
  3804                           ;	Fail-Safe Clock Monitor Enable bit
  3805                           ;	FCMEN = 0x0, unprogrammed default
  3806                           ;	Internal/External Oscillator Switchover bit
  3807                           ;	IESO = 0x0, unprogrammed default
  3808  300001                     	org	3145729
  3809  300001  02                 	db	2
  3810                           
  3811                           ;Config register CONFIG2L @ 0x300002
  3812                           ;	unspecified, using default values
  3813                           ;	Power-up Timer Enable bit
  3814                           ;	PWRT = 0x1, unprogrammed default
  3815                           ;	Brown-out Reset Enable bits
  3816                           ;	BOREN = 0x3, unprogrammed default
  3817                           ;	Brown Out Reset Voltage bits
  3818                           ;	BORV = 0x3, unprogrammed default
  3819  300002                     	org	3145730
  3820  300002  1F                 	db	31
  3821                           
  3822                           ;Config register CONFIG2H @ 0x300003
  3823                           ;	Watchdog Timer Enable bit
  3824                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3825                           ;	Watchdog Timer Postscale Select bits
  3826                           ;	WDTPS = 1, 1:1
  3827  300003                     	org	3145731
  3828  300003  00                 	db	0
  3829                           
  3830                           ; Padding undefined space
  3831  300004                     	org	3145732
  3832  300004  FF                 	db	255
  3833                           
  3834                           ;Config register CONFIG3H @ 0x300005
  3835                           ;	unspecified, using default values
  3836                           ;	CCP2 MUX bit
  3837                           ;	CCP2MX = 0x1, unprogrammed default
  3838                           ;	PORTB A/D Enable bit
  3839                           ;	PBADEN = 0x1, unprogrammed default
  3840                           ;	Low-Power Timer1 Oscillator Enable bit
  3841                           ;	LPT1OSC = 0x0, unprogrammed default
  3842                           ;	MCLR Pin Enable bit
  3843                           ;	MCLRE = 0x1, unprogrammed default
  3844  300005                     	org	3145733
  3845  300005  83                 	db	131
  3846                           
  3847                           ;Config register CONFIG4L @ 0x300006
  3848                           ;	Stack Full/Underflow Reset Enable bit
  3849                           ;	STVREN = 0x1, unprogrammed default
  3850                           ;	Single-Supply ICSP Enable bit
  3851                           ;	LVP = OFF, Single-Supply ICSP disabled
  3852                           ;	Extended Instruction Set Enable bit
  3853                           ;	XINST = 0x0, unprogrammed default
  3854                           ;	Background Debugger Enable bit
  3855                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3856  300006                     	org	3145734
  3857  300006  81                 	db	129
  3858                           
  3859                           ; Padding undefined space
  3860  300007                     	org	3145735
  3861  300007  FF                 	db	255
  3862                           
  3863                           ;Config register CONFIG5L @ 0x300008
  3864                           ;	unspecified, using default values
  3865                           ;	Code Protection bit
  3866                           ;	CP0 = 0x1, unprogrammed default
  3867                           ;	Code Protection bit
  3868                           ;	CP1 = 0x1, unprogrammed default
  3869                           ;	Code Protection bit
  3870                           ;	CP2 = 0x1, unprogrammed default
  3871                           ;	Code Protection bit
  3872                           ;	CP3 = 0x1, unprogrammed default
  3873  300008                     	org	3145736
  3874  300008  0F                 	db	15
  3875                           
  3876                           ;Config register CONFIG5H @ 0x300009
  3877                           ;	unspecified, using default values
  3878                           ;	Boot Block Code Protection bit
  3879                           ;	CPB = 0x1, unprogrammed default
  3880                           ;	Data EEPROM Code Protection bit
  3881                           ;	CPD = 0x1, unprogrammed default
  3882  300009                     	org	3145737
  3883  300009  C0                 	db	192
  3884                           
  3885                           ;Config register CONFIG6L @ 0x30000A
  3886                           ;	unspecified, using default values
  3887                           ;	Write Protection bit
  3888                           ;	WRT0 = 0x1, unprogrammed default
  3889                           ;	Write Protection bit
  3890                           ;	WRT1 = 0x1, unprogrammed default
  3891                           ;	Write Protection bit
  3892                           ;	WRT2 = 0x1, unprogrammed default
  3893                           ;	Write Protection bit
  3894                           ;	WRT3 = 0x1, unprogrammed default
  3895  30000A                     	org	3145738
  3896  30000A  0F                 	db	15
  3897                           
  3898                           ;Config register CONFIG6H @ 0x30000B
  3899                           ;	unspecified, using default values
  3900                           ;	Configuration Register Write Protection bit
  3901                           ;	WRTC = 0x1, unprogrammed default
  3902                           ;	Boot Block Write Protection bit
  3903                           ;	WRTB = 0x1, unprogrammed default
  3904                           ;	Data EEPROM Write Protection bit
  3905                           ;	WRTD = 0x1, unprogrammed default
  3906  30000B                     	org	3145739
  3907  30000B  E0                 	db	224
  3908                           
  3909                           ;Config register CONFIG7L @ 0x30000C
  3910                           ;	unspecified, using default values
  3911                           ;	Table Read Protection bit
  3912                           ;	EBTR0 = 0x1, unprogrammed default
  3913                           ;	Table Read Protection bit
  3914                           ;	EBTR1 = 0x1, unprogrammed default
  3915                           ;	Table Read Protection bit
  3916                           ;	EBTR2 = 0x1, unprogrammed default
  3917                           ;	Table Read Protection bit
  3918                           ;	EBTR3 = 0x1, unprogrammed default
  3919  30000C                     	org	3145740
  3920  30000C  0F                 	db	15
  3921                           
  3922                           ;Config register CONFIG7H @ 0x30000D
  3923                           ;	unspecified, using default values
  3924                           ;	Boot Block Table Read Protection bit
  3925                           ;	EBTRB = 0x1, unprogrammed default
  3926  30000D                     	org	3145741
  3927  30000D  40                 	db	64
  3928                           tosu	equ	0xFFF
  3929                           tosh	equ	0xFFE
  3930                           tosl	equ	0xFFD
  3931                           stkptr	equ	0xFFC
  3932                           pclatu	equ	0xFFB
  3933                           pclath	equ	0xFFA
  3934                           pcl	equ	0xFF9
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           prodh	equ	0xFF4
  3940                           prodl	equ	0xFF3
  3941                           indf0	equ	0xFEF
  3942                           postinc0	equ	0xFEE
  3943                           postdec0	equ	0xFED
  3944                           preinc0	equ	0xFEC
  3945                           plusw0	equ	0xFEB
  3946                           fsr0h	equ	0xFEA
  3947                           fsr0l	equ	0xFE9
  3948                           wreg	equ	0xFE8
  3949                           indf1	equ	0xFE7
  3950                           postinc1	equ	0xFE6
  3951                           postdec1	equ	0xFE5
  3952                           preinc1	equ	0xFE4
  3953                           plusw1	equ	0xFE3
  3954                           fsr1h	equ	0xFE2
  3955                           fsr1l	equ	0xFE1
  3956                           bsr	equ	0xFE0
  3957                           indf2	equ	0xFDF
  3958                           postinc2	equ	0xFDE
  3959                           postdec2	equ	0xFDD
  3960                           preinc2	equ	0xFDC
  3961                           plusw2	equ	0xFDB
  3962                           fsr2h	equ	0xFDA
  3963                           fsr2l	equ	0xFD9
  3964                           status	equ	0xFD8

Data Sizes:
    Strings     223
    Constant    4
    Data        110
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     58     112
    BANK0           128     81     121
    BANK1           256      0      20
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(2) Largest target is 6
		 -> pontFinal@valor(COMRAM[6]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[15]), STR_23(CODE[17]), STR_22(CODE[13]), STR_21(CODE[14]), 
		 -> STR_20(CODE[17]), STR_19(CODE[14]), STR_18(CODE[17]), STR_17(CODE[11]), 
		 -> STR_16(CODE[9]), STR_15(CODE[10]), STR_14(CODE[10]), STR_13(CODE[4]), 
		 -> STR_12(CODE[10]), STR_11(CODE[10]), STR_10(CODE[14]), pontFinal@valor(COMRAM[6]), 
		 -> STR_9(CODE[14]), STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[17]), STR_2(CODE[12]), 
		 -> STR_1(CODE[12]), 

    musica@mscC	PTR unsigned char  size(2) Largest target is 20
		 -> menu@julietaC(BANK0[20]), menu@mozartC(BANK0[20]), 

    musica@msc	PTR unsigned char  size(2) Largest target is 20
		 -> menu@julieta(BANK0[20]), menu@mozart(BANK0[20]), 


Critical Paths under _main in COMRAM

    _menu->_musica
    _pontFinal->_itoa
    _itoa->___lwdiv
    ___lwdiv->___lwmod
    _musica->_pontua
    _tc_tecla->_atraso_ms
    _pontua->___llmod
    ___llmod->___lldiv
    _msgInicio->_lcd_str
    _msgDisplay->_lcd_str
    _buzzer->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_init->_lcd_cmd
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   66630
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                82    82      0   66630
                                              0 BANK0     81    81      0
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                           _lcd_init
                            _lcd_str
                             _musica
                          _pontFinal
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _pontFinal                                            6     6      0   11103
                                             16 COMRAM     6     6      0
                            ___lldiv
                          _atraso_ms
                               _itoa
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 4     0      4    1931
                                             12 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     770
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _musica                                              10     4      6   38392
                                             48 COMRAM    10     4      6
                          _atraso_ms
                             _buzzer
                            _lcd_cmd
                            _lcd_str
                         _msgDisplay
                          _msgInicio
                             _pontua
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _tc_tecla                                             7     5      2    2554
                                              6 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (3) _pontua                                              26    26      0    2013
                                             22 COMRAM    26    26      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     922
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _msgInicio                                            0     0      0    8192
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (3) _msgDisplay                                           3     1      2    8428
                                             12 COMRAM     3     1      2
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (3) _buzzer                                               2     0      2    8290
                                             12 COMRAM     2     0      2
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (3) _lcd_str                                              5     3      2    4072
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (4) _lcd_dat                                              1     1      0    2082
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             0     0      0    4120
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0    2082
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (5) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2    2038
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _menu
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_init
       _atraso_ms
       _lcd_cmd
         _atraso_ms
         _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _musica
       _atraso_ms
       _buzzer
         _atraso_ms
         _lcd_cmd
           _atraso_ms
           _lcd_wr
         _lcd_str
           _lcd_dat
             _atraso_ms
             _lcd_wr
       _lcd_cmd
         _atraso_ms
         _lcd_wr
       _lcd_str
         _lcd_dat
           _atraso_ms
           _lcd_wr
       _msgDisplay
         _atraso_ms
         _lcd_cmd
           _atraso_ms
           _lcd_wr
         _lcd_str
           _lcd_dat
             _atraso_ms
             _lcd_wr
       _msgInicio
         _atraso_ms
         _lcd_cmd
           _atraso_ms
           _lcd_wr
         _lcd_str
           _lcd_dat
             _atraso_ms
             _lcd_wr
       _pontua
         ___lldiv
         ___llmod
           ___lldiv (ARG)
       _tc_tecla
         _atraso_ms
     _pontFinal
       ___lldiv
       _atraso_ms
       _itoa
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _lcd_cmd
         _atraso_ms
         _lcd_wr
       _lcd_str
         _lcd_dat
           _atraso_ms
           _lcd_wr
     _tc_tecla
       _atraso_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      14       7        7.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     51      79       5       94.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3A      70       1       88.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD      15        0.0%
DATA                 0      0      FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jul 08 02:28:51 2020

                     l41 0962                       l60 13F4                       l55 1024  
                     l63 1568                       l76 0E3A                       l68 10F8  
                    l101 1630                      l111 14BC                      l122 15C4  
                    l131 129C                      l116 163A                      l125 1518  
                    l213 119C                      l206 118C                      l119 15EE  
                    l151 0A0E                      l153 09F6                      l146 09CE  
                    l163 0A76                      l156 0A4E                      l148 09B8  
                    l173 0B2C                      l158 0A36                      l176 0F42  
                    l606 1224                      l670 1308                      l680 1450  
                    l677 1310                      l599 1214                      l687 1458  
                    u610 147A                      u611 1476                      u620 1492  
                    u700 11B4                      u621 148E                      u701 11B0  
                    u630 14BC                      u710 11D6                      u631 14B8  
                    u711 11D2                      u640 125A                      u720 11F4  
                    u800 07A4                      u721 11F0                      u801 07A0  
                    u650 128C                      u810 082E                      u730 12B8  
                    u811 082A                      u731 12B4                      u660 129C  
                    u820 08B8                      u900 099E                      u740 12D6  
                    u661 1298                      u821 08B4                      u901 099A  
                    u741 12D2                      u670 1120                      u830 0942  
                    u910 09B8                      u750 12F2                      u647 1250  
                    u671 111C                      u831 093E                      u911 09B4  
                    u751 12EE                      u680 1142                      u840 0962  
                    u920 09C6                      u760 1408                      u657 1282  
                    u681 113E                      u841 095E                      u921 09C2  
                    u761 1404                      u850 0F66                      u690 116A  
                    u930 09DC                      u770 1426                      u851 0F62  
                    u691 1166                      u931 09D8                      u771 1422  
                    u860 0FC8                      u940 09F6                      u780 143C  
                    u861 0FC4                      u941 09F2                      u781 1438  
                    u870 0FF0                      u950 0A04                      u871 0FEC  
                    u791 0702                      u951 0A00                      u880 1018  
                    u960 0A1C                      u881 1014                      u961 0A18  
                    u890 13D8                      u970 0A36                      u891 13D4  
                    u971 0A32                      u980 0A44                      u981 0A40  
                    u990 0A5C                      u991 0A58                      wreg 000FE8  
                   l1500 1128                     l1430 145A                     l1510 117A  
                   l1502 1134                     l1440 1482                     l1432 1466  
                   l1512 117C                     l1504 1142                     l1520 11BC  
                   l1600 078A                     l1434 146A                     l1514 1186  
                   l1506 114C                     l1530 120E                     l1522 11C8  
                   l1610 0806                     l1602 078E                     l1444 1496  
                   l1452 14A2                     l1460 15A0                     l1700 1008  
                   l1508 116A                     l1524 11D6                     l1516 119E  
                   l1620 088C                     l1612 0808                     l1604 07A4  
                   l1540 12C8                     l1532 129E                     l1438 147E  
                   l1454 14A6                     l1470 15C2                     l1462 15A6  
                   l1710 13A8                     l1702 1018                     l1526 11F4  
                   l1518 11B4                     l1630 08A2                     l1622 088E  
                   l1614 0814                     l1606 0802                     l1550 12FC  
                   l1542 12D6                     l1534 12A6                     l1448 149C  
                   l1456 1636                     l1480 15DE                     l1472 15C8  
                   l1464 15A8                     l1720 13E8                     l1712 13AE  
                   l1704 1384                     l1528 1204                     l1640 091C  
                   l1632 08B8                     l1624 0890                     l1616 0818  
                   l1608 0804                     l1800 0AEE                     l1552 1302  
                   l1544 12DC                     l1536 12B8                     l1560 1418  
                   l1482 15E0                     l1474 15CA                     l1466 15B4  
                   l1458 159E                     l1490 125E                     l1714 13C0  
                   l1706 1390                     l1650 0F44                     l1730 1544  
                   l1722 151A                     l1642 0928                     l1634 0916  
                   l1626 0892                     l1618 082E                     l1570 06E6  
                   l1810 0B26                     l1802 0AFE                     l1546 12F2  
                   l1538 12C0                     l1562 1426                     l1554 13F6  
                   l1484 15EC                     l1476 15D0                     l1900 14C2  
                   l1468 15B6                     l1492 1260                     l1716 13C6  
                   l1708 139C                     l1660 0F76                     l1652 0F48  
                   l1732 1556                     l1724 1526                     l1644 092C  
                   l1636 0918                     l1628 089E                     l1580 06F8  
                   l1572 06E8                     l1804 0B0E                     l1740 0964  
                   l1548 12FA                     l1564 143C                     l1556 1408  
                   l1820 1074                     l1478 15D2                     l1902 14CE  
                   l1486 1226                     l1718 13D8                     l1662 0F82  
                   l1654 0F4E                     l1734 1562                     l1726 1532  
                   l1494 10FA                     l1646 0942                     l1638 091A  
                   l1590 071A                     l1582 070A                     l1574 06EC  
                   l1806 0B10                     l1750 097C                     l1742 0970  
                   l1566 1444                     l1558 1410                     l1830 10B6  
                   l1822 108E                     l1814 1026                     l1910 0B62  
                   l1488 122E                     l1672 0FA4                     l1664 0F8E  
                   l1656 0F54                     l1728 1538                     l1496 110A  
                   l1648 0946                     l1592 0778                     l1584 0712  
                   l1576 06F0                     l1808 0B22                     l1760 09C6  
                   l1752 0990                     l1744 0978                     l1840 0CE0  
                   l1568 144A                     l1736 0E3C                     l1832 10C8  
                   l1824 1094                     l1816 105A                     l1920 0B96  
                   l1912 0B74                     l1904 0B2E                     l1690 0FF0  
                   l1674 0FB6                     l1666 0FA0                     l1658 0F66  
                   l1498 1120                     l1594 077A                     l1578 06F4  
                   l1770 0A1C                     l1762 09DC                     l1754 099E  
                   l1850 0D14                     l1842 0CF8                     l1738 0F32  
                   l1834 10CE                     l1826 10A4                     l1818 106E  
                   l1930 0BC6                     l1922 0BA2                     l1914 0B86  
                   l1906 0B3E                     l1684 0FCC                     l1676 0FB8  
                   l1596 077C                     l1780 0A68                     l1772 0A28  
                   l1764 09E8                     l1756 09AA                     l1860 0D54  
                   l1852 0D20                     l1844 0D04                     l1836 10E0  
                   l1828 10AA                     l1940 0BF0                     l1932 0BD2  
                   l1924 0BA8                     l1916 0B8A                     l1908 0B50  
                   l1686 0FDE                     l1678 0FC8                     l1598 077E  
                   l1790 0AA2                     l1870 0D60                     l1862 0D58  
                   l1854 0D26                     l1846 0D08                     l1838 10EC  
                   l1950 0C20                     l1942 0BFC                     l1934 0BD8  
                   l1926 0BB4                     l1918 0B90                     l1696 0FF4  
                   l1688 0FE0                     l1784 0A84                     l1776 0A44  
                   l1768 0A04                     l1792 0AB2                     l1880 0DE2  
                   l1872 0D88                     l1856 0D38                     l1848 0D0E  
                   l1960 0C5E                     l1952 0C24                     l1944 0C02  
                   l1936 0BDE                     l1928 0BBA                     l1698 1006  
                   l1794 0ABE                     l1778 0A5C                     l1786 0A8E  
                   l1890 0E20                     l1882 0DE6                     l1874 0D94  
                   l1858 0D48                     l1962 0C70                     l1970 0CB4  
                   l1954 0C36                     l1946 0C0E                     l1938 0BEA  
                   l1788 0AA0                     l1796 0AC6                     l1892 0E24  
                   l1884 0E04                     l1876 0DBE                     l1868 0D5C  
                   l1972 0CCE                     l1964 0C8C                     l1956 0C3A  
                   l1948 0C14                     l1798 0ADC                     l1894 0E28  
                   l1886 0E10                     l1878 0DD2                     l1966 0C94  
                   l1958 0C4C                     l1896 0E2A                     l1888 0E14  
                   l1976 162C                     l1898 14BE                     STR_1 068C  
                   STR_2 0698                     STR_3 0616                     STR_4 06CD  
                   STR_5 06AF                     STR_6 068E                     STR_7 069B  
                   STR_8 06D7                     STR_9 0647                     u1000 0A76  
                   u1001 0A72                     u1010 0A84                     u1011 0A80  
                   u1020 0AB2                     u1021 0AAE                     u1030 0ADC  
                   u1031 0AD8                     u1040 0AEE                     u1120 0E04  
                   u1104 0D7E                     u1200 0C70                     u1041 0AEA  
                   u1121 0E00                     u1105 0D7A                     u1201 0C6C  
                   u1050 0AFE                     u1130 0E3A                     u1114 0DB2  
                   u1051 0AFA                     u1131 0E36                     u1115 0DAE  
                   u1060 0B0E                     u1061 0B0A                     u1141 0B48  
                   u1070 0B22                     u1071 0B1E                     u1151 0B5A  
                   u1080 108E                     u1081 108A                     u1161 0B6C  
                   u1090 0D38                     u1091 0D34                     u1171 0B7E  
                   u1180 0C4C                     u1181 0C48                     u1190 0C5E  
                   u1191 0C5A                     _cont 006D                     _main 162C  
                   _menu 0B2E                     _itoa 0E3C                     fsr0h 000FEA  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000                    ?_main 0001  
                  ?_menu 0001                    ?_itoa 000D                    STR_10 0655  
                  STR_11 06C3                    STR_12 06B9                    STR_20 0627  
                  STR_13 06E0                    STR_21 0663                    STR_14 06AF  
                  STR_22 067F                    STR_15 068E                    STR_23 0605  
                  STR_16 069B                    STR_24 0638                    STR_17 06A4  
                  STR_18 0616                    STR_19 0671          __end_of___lldiv 119E  
        __end_of___llmod 1226          __end_of___lwdiv 1312          __end_of___lwmod 145A  
        __end_of_lcd_dat 15C6          __end_of_lcd_cmd 15F0          __end_of_lcd_str 129E  
                  _linha 0601                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8            pontua@decimal 0017  
        __initialization 1312             __end_of_main 1634             __end_of_menu 0CE0  
           __end_of_itoa 0F44                   ??_main 003B                   ??_menu 003B  
                 ??_itoa 0011            __activetblptr 000002          tc_tecla@timeout 0007  
       ___llmod@dividend 000E              menu@julieta 00BC              menu@mozartC 0080  
       __end_of_lcd_init 151A                ??___lldiv 0009                ??___llmod 0016  
              ??___lwdiv 000A                ??___lwmod 0005                   _lcd_wr 1634  
                 _atraso 0063                   _buzzer 1384                   _musica 0CE0  
                 _pontua 06E6                ??_lcd_dat 0007                ??_lcd_cmd 0007  
       __end_of_tc_tecla 0B2E                ??_lcd_str 000A             __pdataCOMRAM 003B  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 137A  
            msgDisplay@i 000F            ___rparam_used 000001           __pcstackCOMRAM 0001  
           __pidataBANK0 15F0             __pidataBANK1 1618            __end_of_linha 0605  
     __size_of_atraso_ms 0064              tc_tecla@ret 000C              tc_tecla@tmp 000B  
     __size_of_msgInicio 0050                  ?_lcd_wr 0001                  ?_buzzer 000D  
                ?_musica 0031                  ?_pontua 0001       __size_of_pontFinal 00D4  
              ?_lcd_init 0001               _atraso_min 0065             menu@julietaC 0094  
              ?_tc_tecla 0007                  __Hparam 0000                  __Lparam 0000  
                ___lldiv 10FA                  ___llmod 119E                  ___lwdiv 129E  
                ___lwmod 13F6        __end_of_atraso_ms 14BE             __psmallconst 0600  
        __size_of_lcd_wr 0008                  __pcinit 1312          __size_of_buzzer 0072  
                __ramtop 0600                  __ptext0 162C                  __ptext1 0B2E  
                __ptext2 1026                  __ptext3 0E3C                  __ptext4 13F6  
                __ptext5 129E                  __ptext6 0CE0                  __ptext7 0964  
                __ptext8 06E6                  __ptext9 119E                  _lcd_dat 159C  
                _lcd_cmd 15C6          __size_of_musica 015C          __size_of_pontua 027E  
                _lcd_str 1226               _msgDisplay 0F44        __end_of_msgInicio 156A  
             ??_lcd_init 0008     end_of_initialization 137A                  menu@F51 0100  
                menu@F45 00E5                  menu@F47 00D1                  menu@F49 003B  
                menu@tmp 00D0                  itoa@val 000D            __Lmediumconst 0000  
                itoa@str 000F        __end_of_pontFinal 10FA               ??_tc_tecla 0009  
        ___lldiv@divisor 0005          ___lldiv@counter 000D                  musica@i 003A  
                pontua@i 002B                  pontua@k 002F                  postdec1 000FE5  
                postinc0 000FEE                  postinc2 000FDE               lcd_dat@val 0007  
             lcd_cmd@val 0007             msgDisplay@op 000D               lcd_str@str 0008  
            pontua@delay 002D               atraso_ms@i 0003               atraso_ms@j 0005  
             atraso_ms@k 0006               atraso_ms@t 0001            __pidataCOMRAM 156A  
         __end_of_lcd_wr 163C           __end_of_buzzer 13F6              ?_msgDisplay 000D  
         __end_of_musica 0E3C           __end_of_pontua 0964      start_initialization 1312  
        ___llmod@divisor 0012          ___llmod@counter 0016               menu@mozart 00A8  
               ??_lcd_wr 0001              __pdataBANK0 00D1              __pdataBANK1 0100  
               ??_buzzer 000F                 ??_musica 0037                 ??_pontua 0017  
            __pbssCOMRAM 006D            __pcstackBANK0 0080        __size_of_lcd_init 005C  
    __size_of_msgDisplay 00E2               tc_tecla@to 0009         ___lwdiv@dividend 0006  
      __size_of_tc_tecla 01CA                 ?___lldiv 0001                 ?___llmod 000E  
               ?___lwdiv 0006                 ?___lwmod 0001                 ?_lcd_dat 0001  
               ?_lcd_cmd 0001                 ?_lcd_str 0008                _atrasoMed 0069  
              _atrasoMax 0067                _atrasoMin 006B                _atraso_ms 145A  
            __smallconst 0600           pontFinal@valor 0011         ___lwdiv@quotient 000A  
              _msgInicio 151A                _pontFinal 1026               musica@mscC 0033  
             ?_atraso_ms 0001                lcd_wr@val 0001                copy_data0 1326  
              copy_data1 1346                copy_data2 1366               ?_msgInicio 0001  
               __Hrparam 0000                 __Lrparam 0000               ?_pontFinal 0001  
       __size_of___lldiv 00A4         __size_of___llmod 0088         __size_of___lwdiv 0074  
       __size_of___lwmod 0064             ??_msgDisplay 000F         __size_of_lcd_dat 002A  
       __size_of_lcd_cmd 002A         __size_of_lcd_str 0078                tc_tecla@i 000D  
        ___lwdiv@divisor 0008          ___lwdiv@counter 000C                 __ptext10 10FA  
               __ptext11 151A                 __ptext12 0F44                 __ptext13 1384  
               __ptext14 1226                 __ptext15 159C                 __ptext16 14BE  
               __ptext17 15C6                 __ptext18 1634                 __ptext19 145A  
               _lcd_init 14BE            __size_of_main 0008            __size_of_menu 01B2  
          __size_of_itoa 0108                 _tc_tecla 0964       __end_of_msgDisplay 1026  
              musica@msc 0031                musica@tmp 0039                pontua@F22 004F  
               lcd_str@i 000C              ??_atraso_ms 0003                 buzzer@op 000D  
            ??_msgInicio 000D         ___lwmod@dividend 0001         ___lldiv@dividend 0001  
            ??_pontFinal 0011                 musica@op 0035         ___lldiv@quotient 0009  
        ___lwmod@divisor 0003          ___lwmod@counter 0005  
